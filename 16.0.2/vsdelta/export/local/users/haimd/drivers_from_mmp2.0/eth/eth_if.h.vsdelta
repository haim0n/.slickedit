<!DOCTYPE DeltaFile SYSTEM "http://www.slickedit.com/dtd/vse/vsdelta/9.0/vsdelta.dtd">
<DeltaFile FormatVersion="9.0.0">
<MostRecent Version="4" Comment="" Date="2012/03/14" Time="16:17:30000" NL="\10" Encoding="text">
<Insert>/************************************************************************
* Copyright (C) 2010, Marvell Technology Group Ltd.
* All Rights Reserved.
* 
* This is UNPUBLISHED PROPRIETARY SOURCE CODE of Marvell Technology Group;
* the contents of this file may not be disclosed to third parties, copied
* or duplicated in any form, in whole or in part, without the prior
* written permission of Marvell Technology Group.
* 
* eth_if.h                      
*                                                                               
* Description:                                                                  
* MMP Ethernet Driver implementation.
*                                                                              
*******************************************************************************/

#ifndef __ETH_IF_H__
#define __ETH_IF_H__

#ifdef __cplusplus
extern "C" {
#endif

/* 
 * typedef: enum eth_if_state_t
 *
 * Description: 
 *
 * Specifies network interface port state.
 *
 * Enumerations:
 
 *     ETH_IF_STATE_NONE - Port is not present or invalid.
 *     ETH_IF_STATE_DOWN - Port is disabled for Rx and Tx traffic.
 *     ETH_IF_STATE_UP   - Port is enabled for Rx and Tx traffic.
 */
typedef enum
{
    ETH_IF_STATE_NONE,
    ETH_IF_STATE_DOWN,
    ETH_IF_STATE_UP
} eth_if_state_t;

/* 
 * typedef: struct mmp_nal_ifconfig_t
 *
 * Description: 
 *
 * Specifies NAL network interface parameters.
 *
 * Fields:
 *   state - Physical port state.
 *   port  - Physical port number.
 *   rxq   - Physical port Rx queue.
 *   txq   - Physical port Tx queue.
 *   txp   - Physical transmission port.
 *   mvh   - Marvell header for transmission.
 */
typedef struct
{
  eth_if_state_t state;
  int            port;
  int            rxq;
  int            txq;
  int            txp;
  int            mvh;
  void         (*rx_callback)(int port, void* data, int size);
}
eth_if_config_t;

/* 
 * typedef: struct eth_if_stats_t
 *
 * Description: 
 *
 * Specifies NAL network interface statistics.
 *
 * Fields:
 *  rx_pkts     - Received number of packets.
 *  tx_pkts     - Transmitted number of packets.
 *  rx_bytes    - Recved number of bytes.
 *  tx_bytes    - Transmitted number of bytes.
 *  rx_errors   - Number of receive errors.
 *  tx_errors   - Number of transmit errors.
 */
typedef struct
{
  int rx_pkts;
  int tx_pkts;
  int rx_bytes;
  int tx_bytes;
  int rx_errors;
  int tx_errors;
}
eth_if_stats_t;

/* Initialize eth interface */
int eth_if_init(eth_if_config_t* cfg);

/* Terminate eth interface */
int eth_if_shutdown(void);

/* Interface up */
int eth_if_up(int port);

/* Interface down */
int eth_if_down(int port);

/* Transmit packet */
int eth_if_tx(int port, void* data, int size);

/* Recv packets up to a budget */
int eth_if_rx(int port, int rx_todo);

/* Get stats */
int eth_if_get_stats(int port, eth_if_stats_t *stats);

#ifdef __cplusplus
}
#endif

#endif</Insert>
</MostRecent>
<Delta Version="0" Comment="" NL="\10" Encoding="text" Date="2012/01/03" Time="12:39:36000">
<Copy StartSeek="0" EndSeek="1593"/>
<Insert>typedef struct
{
</Insert>
<Copy StartSeek="1610" EndSeek="2839"/>
</Delta>
<Delta Version="1" Comment="" NL="\10" Encoding="text" Date="2012/01/03" Time="13:00:50000">
<Copy StartSeek="0" EndSeek="1220"/>
<Insert>typedef enum
{
    ETH_IF_STATE_NONE,
    ETH_IF_STATE_DOWN,
    ETH_IF_STATE_UP
</Insert>
<Copy StartSeek="1292" EndSeek="1601"/>
<Insert>  eth_if_state_t state;
  int            port;
  int            rxq;
  int            txq;
  void         (*rx_callback)(int port, void* data, int size);
</Insert>
<Copy StartSeek="1750" EndSeek="2825"/>
</Delta>
<Delta Version="2" Comment="" NL="\10" Encoding="text" Date="2012/01/03" Time="13:01:56000">
<Copy StartSeek="0" EndSeek="1750"/>
<Insert>}
eth_if_config_t;

</Insert>
<Copy StartSeek="1770" EndSeek="2825"/>
</Delta>
<Delta Version="3" Comment="" NL="\10" Encoding="text" Date="2012/01/03" Time="13:02:6000">
<Copy StartSeek="0" EndSeek="1220"/>
<Insert>typedef enum {
	ETH_IF_STATE_NONE,
	ETH_IF_STATE_DOWN,
	ETH_IF_STATE_UP
</Insert>
<Copy StartSeek="1301" EndSeek="1589"/>
<Copy StartSeek="1676" EndSeek="1680"/>
<Insert>typedef struct {
	eth_if_state_t state;
	int            port;
	int            rxq;
	int            txq;
	void         (*rx_callback)(int port, void* data, int size);
} eth_if_config_t;

</Insert>
<Copy StartSeek="1915" EndSeek="2669"/>
<Insert>/* Interface reset */
int eth_if_reset(int port);

</Insert>
<Copy StartSeek="2669" EndSeek="2919"/>
</Delta>
</DeltaFile>
