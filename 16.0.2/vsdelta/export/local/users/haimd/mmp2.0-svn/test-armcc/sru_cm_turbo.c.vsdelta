<!DOCTYPE DeltaFile SYSTEM "http://www.slickedit.com/dtd/vse/vsdelta/9.0/vsdelta.dtd">
<DeltaFile FormatVersion="9.0.0">
<MostRecent Version="52" Comment="" Date="2012/01/22" Time="11:37:50000" NL="\10" Encoding="text">
<Insert>
typedef int int32_t;
typedef short int16_t;

#if (defined COMPILER_ARMCC)
  #define inline_ __inline
#elif (defined COMPILER_GCC_ARM)
	#define inline_ inline
#endif


#ifndef MAX_INT16
#define MAX_INT16 ((int16_t)0x7FFF)
#endif
#ifndef MIN_INT32
#define MIN_INT16 ((int16_t)0x8000)
#endif
#ifndef MIN_INT32
#define MAX_INT32 ((int32_t)0x7FFFFFFFL)
#endif
#ifndef MIN_INT32
#define MIN_INT32 ((int32_t)0x80000000L)
#endif


/* misc conversions  saturation: Q16.15-&gt;Q15        */
static inline_ int16_t S_sature_l (int32_t x)
{
    if (x&gt;MAX_INT16) x=MAX_INT16;
    if (x&lt;MIN_INT16) x=MIN_INT16;

    return (int16_t)x;
}

void cm_turbo_vad_cast_vector_v1(int32_t *in_vec, int16_t *out_vec, int32_t M) {

//	int32_t i;	
//	int32_t value;

//#ifdef ARM9E_OPTIMIZED
//
//    const int32_t *restrict x=(const int32_t *)(in_vec);
//    const int32_t *restrict y=(const int32_t *)(out_vec);
//    int32_t x0,x1,y0,y1;
//
//    NASSERT_ALIGN8(x);
//    _LDM2INC(x,x0,x1);
//    M = M&gt;&gt;1;
//        for(;M&gt;0;M--) {
//        y0 = S_sature_l(x0&gt;&gt;9);     _ASM_VOLATILE;
//        y1 = S_sature_l(x1&gt;&gt;9);     _ASM_VOLATILE;
//        _ADDLSL(x0,y1,y0,16);       _ASM_VOLATILE;
//        _STRINC(y,x0);              _ASM_VOLATILE;
//        //out_vec[M] = S_sature_l(in_vec[M]&gt;&gt;9); // saturate
//        _LDM2INC(x,x0,x1);          _ASM_VOLATILE;
//        }
//#else
	for (M--;M&gt;=0;M--) {
		//value = (in_vec[i]+(1&lt;&lt;8))&gt;&gt;9; // in_vec is Q.9
		//out_vec[i] = S_sature_l(value); // saturate
		out_vec[M] = S_sature_l(in_vec[M]); // saturate Q16.15 =&gt; Q.15
	}

//#endif

} //cast_and_clear_vector

int main(int argc, char **argv)
{
	int in_vec;
	short out_vec;

	cm_turbo_vad_cast_vector_v1(&amp;in_vec, &amp;out_vec, (int32_t)argc);

	return 0;
}
</Insert>
</MostRecent>
<Delta Version="0" Comment="" NL="\10" Encoding="text" Date="2012/01/18" Time="17:38:52000">
<Copy StartSeek="0" EndSeek="115"/>
<Insert>#ifdef ARM9E_OPTIMIZED
    
    const int32_t *restrict x=(const int32_t *)(in_vec);
    const int32_t *restrict y=(const int32_t *)(out_vec);
    int32_t x0,x1,y0,y1;

    NASSERT_ALIGN8(x);
    _LDM2INC(x,x0,x1);            
    M = M&gt;&gt;1;
 	for(;M&gt;0;M--) {
        y0 = S_sature_l(x0&gt;&gt;9);     _ASM_VOLATILE; 
        y1 = S_sature_l(x1&gt;&gt;9);     _ASM_VOLATILE; 
        _ADDLSL(x0,y1,y0,16);       _ASM_VOLATILE;    
        _STRINC(y,x0);              _ASM_VOLATILE; 
        //out_vec[M] = S_sature_l(in_vec[M]&gt;&gt;9); // saturate
        _LDM2INC(x,x0,x1);          _ASM_VOLATILE;    
	}   	
#else
</Insert>
<Copy StartSeek="732" EndSeek="931"/>
<Insert>#endif
</Insert>
<Copy StartSeek="940" EndSeek="969"/>
</Delta>
<Delta Version="1" Comment="" NL="\10" Encoding="text" Date="2012/01/18" Time="17:39:13000">
<Copy StartSeek="0" EndSeek="1"/>
<Copy StartSeek="325" EndSeek="1293"/>
</Delta>
<Delta Version="2" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:37:59000">
<Copy StartSeek="0" EndSeek="53"/>
<Insert>  int Rd; 
  __asm__("SSAT  %0,%2,%1" : "=r" (Rd) : "r" (Rn), "i" (lim));
  return (int32_t)Rd; 
</Insert>
<Copy StartSeek="146" EndSeek="285"/>
<Insert>    return (int16_t)_SSAT(16,x);
</Insert>
<Copy StartSeek="314" EndSeek="429"/>
<Insert>	
</Insert>
<Copy StartSeek="430" EndSeek="1047"/>
<Insert>	for(M--;M&gt;=0;M--) {
		 //value = (in_vec[i]+(1&lt;&lt;8))&gt;&gt;9; // in_vec is Q.9
		 //out_vec[i] = S_sature_l(value); // saturate
         out_vec[M] = S_sature_l(in_vec[M]); // saturate Q16.15 =&gt; Q.15
</Insert>
<Copy StartSeek="1234" EndSeek="1247"/>
<Insert>	
</Insert>
<Copy StartSeek="1248" EndSeek="1275"/>
</Delta>
<Delta Version="3" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:38:6000">
<Copy StartSeek="0" EndSeek="1"/>
<Insert>
</Insert>
<Copy StartSeek="46" EndSeek="1319"/>
</Delta>
<Delta Version="4" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:40:16000">
<Copy StartSeek="0" EndSeek="1384"/>
<Insert>	cm_turbo_vad_cast_vector(&amp;in_vec, &amp;out_vec)
</Insert>
<Copy StartSeek="1435" EndSeek="1437"/>
</Delta>
<Delta Version="5" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:40:36000">
<Copy StartSeek="0" EndSeek="1384"/>
<Insert>	cm_turbo_vad_cast_vector(&amp;in_vec, &amp;out_vec, argc)
</Insert>
<Copy StartSeek="1436" EndSeek="1438"/>
</Delta>
<Delta Version="6" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:40:38000">
<Copy StartSeek="0" EndSeek="169"/>
<Insert>	return(int32_t)Rd; 
</Insert>
<Copy StartSeek="191" EndSeek="1439"/>
</Delta>
<Delta Version="7" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:41:19000">
<Copy StartSeek="0" EndSeek="1437"/>
<Insert>}
</Insert>
</Delta>
<Delta Version="8" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:41:39000">
<Copy StartSeek="0" EndSeek="1354"/>
<Insert>	volatile int in_vec, out_vec;
</Insert>
<Copy StartSeek="1376" EndSeek="1442"/>
</Delta>
<Delta Version="9" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:41:59000">
<Copy StartSeek="0" EndSeek="1354"/>
<Insert>	int in_vec, out_vec;
</Insert>
<Copy StartSeek="1385" EndSeek="1451"/>
</Delta>
<Delta Version="10" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:42:27000">
<Copy StartSeek="0" EndSeek="1354"/>
<Insert>	int restrict in_vec, out_vec;
</Insert>
<Copy StartSeek="1376" EndSeek="1442"/>
</Delta>
<Delta Version="11" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:42:53000">
<Copy StartSeek="0" EndSeek="362"/>
<Insert>void cm_turbo_vad_cast_vector(int32_t *in_vec, int16_t *out_vec, int32_t M) {
</Insert>
<Copy StartSeek="442" EndSeek="1444"/>
</Delta>
<Delta Version="12" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:43:14000">
<Copy StartSeek="0" EndSeek="1378"/>
<Insert>	cm_turbo_vad_cast_vector(&amp;in_vec, &amp;out_vec, argc);
</Insert>
<Copy StartSeek="1432" EndSeek="1446"/>
</Delta>
<Delta Version="13" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:43:18000">
<Copy StartSeek="0" EndSeek="362"/>
<Insert>void cm_turbo_vad_cast_vector_1(int32_t *in_vec, int16_t *out_vec, int32_t M) {
</Insert>
<Copy StartSeek="443" EndSeek="1379"/>
<Insert>	cm_turbo_vad_cast_vector_1(&amp;in_vec, &amp;out_vec, argc);
</Insert>
<Copy StartSeek="1434" EndSeek="1448"/>
</Delta>
<Delta Version="14" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:43:23000">
<Copy StartSeek="0" EndSeek="46"/>
<Insert>inline_ int32_t _SSAT(int32_t lim, int32_t Rn) 
</Insert>
<Copy StartSeek="95" EndSeek="250"/>
<Insert>inline_ int16_t S_sature_l (int32_t x)
</Insert>
<Copy StartSeek="290" EndSeek="1450"/>
</Delta>
<Delta Version="15" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:45:55000">
<Copy StartSeek="0" EndSeek="46"/>
<Insert>_inline_ int32_t _SSAT(int32_t lim, int32_t Rn) 
</Insert>
<Copy StartSeek="100" EndSeek="255"/>
<Insert>_inline_ int16_t S_sature_l (int32_t x)
</Insert>
<Copy StartSeek="300" EndSeek="1460"/>
</Delta>
<Delta Version="16" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:46:13000">
<Copy StartSeek="0" EndSeek="1335"/>
<Insert>int main(int argc, char **argc)
</Insert>
<Copy StartSeek="1367" EndSeek="1460"/>
</Delta>
<Delta Version="17" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:47:3000">
<Copy StartSeek="0" EndSeek="1369"/>
<Insert>	int in_vec, out_vec;
	cm_turbo_vad_cast_vector_v1(&amp;in_vec, &amp;out_vec, argc);
</Insert>
<Copy StartSeek="1444" EndSeek="1458"/>
</Delta>
<Delta Version="18" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:47:30000">
<Copy StartSeek="0" EndSeek="1369"/>
<Insert>	int in_vec, out_vec M;
</Insert>
<Copy StartSeek="1395" EndSeek="1460"/>
</Delta>
<Delta Version="19" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:47:33000">
<Copy StartSeek="0" EndSeek="1395"/>
<Insert>	cm_turbo_vad_cast_vector_v1(&amp;in_vec, &amp;out_vec, );
</Insert>
<Copy StartSeek="1447" EndSeek="1461"/>
</Delta>
<Delta Version="20" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:47:40000">
<Copy StartSeek="0" EndSeek="1369"/>
<Insert>	int in_vec, out_vec , M;
</Insert>
<Copy StartSeek="1394" EndSeek="1460"/>
</Delta>
<Delta Version="21" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:47:43000">
<Copy StartSeek="0" EndSeek="1369"/>
<Insert>	int in_vec, out_vec ,M;
</Insert>
<Copy StartSeek="1394" EndSeek="1460"/>
</Delta>
<Delta Version="22" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:47:55000">
<Copy StartSeek="0" EndSeek="1369"/>
<Insert>	int in_vec, out_vec, M;
</Insert>
<Copy StartSeek="1401" EndSeek="1467"/>
</Delta>
<Delta Version="23" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:49:12000">
<Copy StartSeek="0" EndSeek="1385"/>
<Insert>	short out_vec,
</Insert>
<Copy StartSeek="1401" EndSeek="1467"/>
</Delta>
<Delta Version="24" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:49:24000">
<Copy StartSeek="0" EndSeek="1401"/>
<Copy StartSeek="1402" EndSeek="1468"/>
</Delta>
<Delta Version="25" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:49:25000">
<Copy StartSeek="0" EndSeek="46"/>
<Insert>static inline int32_t _SSAT(int32_t lim, int32_t Rn) 
{ 
	int Rd; 
</Insert>
<Copy StartSeek="125" EndSeek="187"/>
<Insert>	return (int32_t)Rd; 
</Insert>
<Copy StartSeek="208" EndSeek="210"/>
<Insert>
</Insert>
<Copy StartSeek="217" EndSeek="1485"/>
</Delta>
<Delta Version="26" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:59:8000">
<Copy StartSeek="0" EndSeek="46"/>
<Copy StartSeek="47" EndSeek="1486"/>
</Delta>
<Delta Version="27" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:59:21000">
<Copy StartSeek="0" EndSeek="47"/>
<Insert>#ifdef GCC_ARM
</Insert>
<Copy StartSeek="48" EndSeek="112"/>
<Copy StartSeek="127" EndSeek="189"/>
<Insert>	return (int32_t)Rd;
}
</Insert>
<Copy StartSeek="189" EndSeek="196"/>
<Copy StartSeek="220" EndSeek="1488"/>
</Delta>
<Delta Version="28" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:59:39000">
<Copy StartSeek="0" EndSeek="189"/>
<Insert>#endif
</Insert>
<Copy StartSeek="210" EndSeek="1502"/>
</Delta>
<Delta Version="29" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="09:59:42000">
<Copy StartSeek="0" EndSeek="46"/>
<Insert>

</Insert>
<Copy StartSeek="103" EndSeek="1557"/>
</Delta>
<Delta Version="30" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:09:21000">
<Copy StartSeek="0" EndSeek="167"/>
<Insert>#ifdef GCC_ARM
</Insert>
<Copy StartSeek="191" EndSeek="1566"/>
</Delta>
<Delta Version="31" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:09:28000">
<Copy StartSeek="0" EndSeek="75"/>
<Insert>  #define inline_ __inline
</Insert>
<Copy StartSeek="103" EndSeek="104"/>
<Insert>static inline int32_t _SSAT(int32_t lim, int32_t Rn)
</Insert>
<Copy StartSeek="158" EndSeek="355"/>
<Insert>static inline int16_t S_sature_l (int32_t x)
</Insert>
<Copy StartSeek="401" EndSeek="1569"/>
</Delta>
<Delta Version="32" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:09:47000">
<Copy StartSeek="0" EndSeek="103"/>
<Insert>
</Insert>
<Copy StartSeek="142" EndSeek="1607"/>
</Delta>
<Delta Version="33" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:10:32000">
<Copy StartSeek="0" EndSeek="103"/>
<Copy StartSeek="161" EndSeek="168"/>
<Insert>	#if (defined COMPILER_ARMCC)
</Insert>
<Copy StartSeek="169" EndSeek="170"/>
<Insert>
</Insert>
<Copy StartSeek="170" EndSeek="1635"/>
</Delta>
<Delta Version="34" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:11:3000">
<Copy StartSeek="0" EndSeek="75"/>
<Copy StartSeek="93" EndSeek="1653"/>
</Delta>
<Delta Version="35" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:14:41000">
<Copy StartSeek="0" EndSeek="75"/>
<Insert>#error "ARMCC!!!"
</Insert>
<Copy StartSeek="75" EndSeek="1635"/>
</Delta>
<Delta Version="36" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:14:52000">
<Copy StartSeek="0" EndSeek="75"/>
<Insert>  #define inline__ __inline
</Insert>
<Copy StartSeek="102" EndSeek="1634"/>
</Delta>
<Delta Version="37" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:15:5000">
<Copy StartSeek="0" EndSeek="135"/>
<Insert>	#define inline__ inline
</Insert>
<Copy StartSeek="159" EndSeek="1633"/>
</Delta>
<Delta Version="38" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:15:12000">
<Copy StartSeek="0" EndSeek="233"/>
<Insert>#ifdef COMPILER_GCC_ARM
</Insert>
<Copy StartSeek="259" EndSeek="321"/>
<Insert>#endif /* GCC_ARM */
</Insert>
<Copy StartSeek="344" EndSeek="1637"/>
</Delta>
<Delta Version="39" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:18:7000">
<Copy StartSeek="0" EndSeek="233"/>
<Insert>//#ifdef COMPILER_GCC_ARM
</Insert>
<Copy StartSeek="257" EndSeek="319"/>
<Insert>//#endif /* GCC_ARM */
</Insert>
<Copy StartSeek="340" EndSeek="1633"/>
</Delta>
<Delta Version="40" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:18:31000">
<Copy StartSeek="0" EndSeek="233"/>
<Insert>#ifdef COMPILER_GCC_ARM
</Insert>
<Copy StartSeek="323" EndSeek="385"/>
<Insert>#endif /* GCC_ARM */
</Insert>
<Copy StartSeek="412" EndSeek="1705"/>
</Delta>
<Delta Version="41" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:19:28000">
<Copy StartSeek="0" EndSeek="263"/>
<Insert>  #define inline_ __inline
</Insert>
<Copy StartSeek="266" EndSeek="1681"/>
</Delta>
<Delta Version="42" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:19:32000">
<Copy StartSeek="0" EndSeek="263"/>
<Insert>  
</Insert>
<Copy StartSeek="325" EndSeek="1740"/>
</Delta>
<Delta Version="43" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:20:12000">
<Copy StartSeek="0" EndSeek="263"/>
<Insert>	__asm__("SSAT  %0,%2,%1" : "=r" (Rd) : "r" (Rn), "i" (lim));
</Insert>
<Copy StartSeek="323" EndSeek="1738"/>
</Delta>
<Delta Version="44" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:25:0000">
<Copy StartSeek="0" EndSeek="263"/>
<Insert>	__asm("SSAT  %0,%2,%1" : "=r" (Rd) : "r" (Rn), "i" (lim));
</Insert>
<Copy StartSeek="370" EndSeek="1785"/>
</Delta>
<Delta Version="45" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:53:53000">
<Copy StartSeek="0" EndSeek="330"/>
<Insert>	__asm("SAT    r7, #16, r7, LSL #4");
	
</Insert>
<Copy StartSeek="373" EndSeek="1788"/>
</Delta>
<Delta Version="46" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:56:39000">
<Copy StartSeek="0" EndSeek="339"/>
<Insert>		SAT    r7, #16, r7, LSL #4
</Insert>
<Copy StartSeek="369" EndSeek="1789"/>
</Delta>
<Delta Version="47" Comment="" NL="\10" Encoding="text" Date="2012/01/19" Time="10:56:50000">
<Copy StartSeek="0" EndSeek="623"/>
<Insert>//	return (int16_t)(L_shl_l(x,16)&gt;&gt;16);
	return(int16_t)_SSAT(16,x);
}

</Insert>
<Copy StartSeek="718" EndSeek="1812"/>
</Delta>
<Delta Version="48" Comment="" NL="\10" Encoding="text" Date="2012/01/22" Time="11:34:53000">
<Copy StartSeek="0" EndSeek="168"/>
<Insert>static inline_ int32_t _SSAT(int32_t lim, int32_t Rn)
{
	int Rd;

#if (defined COMPILER_ARMCC)
//      __asm("SSAT  %0,%2,%1" : "=r" (Rd) : "r" (Rn), "i" (lim));
	__asm {
		SSAT    r7, #16, r7, LSL #4
	}
	
#elif (defined COMPILER_GCC_ARM)
	__asm__("SSAT  %0,%2,%1" : "=r" (Rd) : "r" (Rn), "i" (lim));
#endif /* COMPILER_ARMCC*/

	return (int32_t)Rd;
}
</Insert>
<Copy StartSeek="168" EndSeek="1460"/>
</Delta>
<Delta Version="49" Comment="" NL="\10" Encoding="text" Date="2012/01/22" Time="11:35:5000">
<Copy StartSeek="0" EndSeek="168"/>
<Copy StartSeek="424" EndSeek="1716"/>
</Delta>
<Delta Version="50" Comment="" NL="\10" Encoding="text" Date="2012/01/22" Time="11:35:45000">
<Copy StartSeek="0" EndSeek="1617"/>
<Insert>	int in_vec, M;
</Insert>
<Copy StartSeek="1630" EndSeek="1647"/>
<Insert>	cm_turbo_vad_cast_vector_v1(&amp;in_vec, &amp;out_vec, M);
</Insert>
<Copy StartSeek="1708" EndSeek="1722"/>
</Delta>
<Delta Version="51" Comment="" NL="\10" Encoding="text" Date="2012/01/22" Time="11:37:35000">
<Copy StartSeek="0" EndSeek="1647"/>
<Insert>	cm_turbo_vad_cast_vector_v1(&amp;in_vec, &amp;out_vec, (int32_t)M);
</Insert>
<Copy StartSeek="1711" EndSeek="1725"/>
</Delta>
</DeltaFile>
