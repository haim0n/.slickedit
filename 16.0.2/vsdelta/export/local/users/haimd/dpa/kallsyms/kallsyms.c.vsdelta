<!DOCTYPE DeltaFile SYSTEM "http://www.slickedit.com/dtd/vse/vsdelta/9.0/vsdelta.dtd">
<DeltaFile FormatVersion="9.0.0">
<MostRecent Version="16" Comment="" Date="2012/04/19" Time="13:04:14000" NL="\10" Encoding="text">
<Insert>/*
 *	Marvell Kernel Learning Agent
 * 
 *      Authors:
 *	Haim Daniel
 *
 *	This program is free software; you can redistribute it and/or
 *	modify it under the terms of the GNU General Public License
 *	as published by the Free Software Foundation; either version
 *	2 of the License, or (at your option) any later version.
 */

#include &lt;linux/module.h&gt;
#include &lt;linux/kernel.h&gt;
#include &lt;linux/kallsyms.h&gt;

#undef pr_fmt
#define pr_fmt(fmt)	"ksym_grep: " fmt

static char sym[64];
module_param_string(sym, sym, 64, 0600);
MODULE_PARM_DESC(sym, "sym=\"sym_to_lookup\"\n");


static int __init ksym_grep(void)
{
	unsigned long addr;

	pr_info("init\n");

	addr = kallsyms_lookup_name(sym);
	if (addr) {
		pr_info("%s: %#lx\n", sym, addr);
	}
	return addr ? 0 : -EINVAL;
}

static void __exit ksym_grep_exit(void)
{
	pr_info("exit\n");
}

module_init(ksym_grep)
module_exit(ksym_grep_exit)
MODULE_LICENSE("GPL");
MODULE_AUTHOR("Haim Daniel &lt;haimd@marvell.com&gt;");
</Insert>
</MostRecent>
<Delta Version="0" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:52:2000">
<Copy StartSeek="0" EndSeek="384"/>
<Insert>#include "klna_nl.h"
#include "klna_nc.h"

</Insert>
<Copy StartSeek="385" EndSeek="926"/>
</Delta>
<Delta Version="1" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:53:11000">
<Copy StartSeek="0" EndSeek="399"/>
<Insert>#define pr_fmt(fmt)	"klna: " fmt
</Insert>
<Copy StartSeek="436" EndSeek="437"/>
<Insert>static int __init klna_init(void)
</Insert>
<Copy StartSeek="475" EndSeek="512"/>
<Insert>	err = klna_nl_open();
</Insert>
<Copy StartSeek="539" EndSeek="602"/>
<Insert>	err = klna_nc_init();
</Insert>
<Copy StartSeek="629" EndSeek="675"/>
<Insert>		klna_nl_close();
</Insert>
<Copy StartSeek="698" EndSeek="732"/>
<Insert>static void __exit klna_exit(void)
</Insert>
<Copy StartSeek="771" EndSeek="793"/>
<Insert>	klna_nl_close();
	klna_nc_exit();
</Insert>
<Copy StartSeek="836" EndSeek="839"/>
<Insert>module_init(klna_init)
module_exit(klna_exit)
</Insert>
<Copy StartSeek="893" EndSeek="966"/>
</Delta>
<Delta Version="2" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:53:25000">
<Copy StartSeek="0" EndSeek="512"/>
<Insert>	err = kallsyms_nl_open();
	if (err) {
		printk(KERN_ERR "nl failed\n");
		return err;
	}
	err = kallsyms_nc_init();
	if (err) {
		printk(KERN_ERR "nc failed\n");
		kallsyms_nl_close();
		return err;
	}

</Insert>
<Copy StartSeek="513" EndSeek="590"/>
<Insert>	kallsyms_nl_close();
	kallsyms_nc_exit();
}

</Insert>
<Copy StartSeek="593" EndSeek="720"/>
</Delta>
<Delta Version="3" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:53:36000">
<Copy StartSeek="0" EndSeek="436"/>
<Insert>
</Insert>
<Copy StartSeek="556" EndSeek="839"/>
</Delta>
<Delta Version="4" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:56:36000">
<Copy StartSeek="0" EndSeek="436"/>
<Copy StartSeek="437" EndSeek="840"/>
</Delta>
<Delta Version="5" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:56:38000">
<Copy StartSeek="0" EndSeek="611"/>
<Insert>
</Insert>
<Copy StartSeek="637" EndSeek="657"/>
<Insert>
</Insert>
<Copy StartSeek="743" EndSeek="950"/>
</Delta>
<Delta Version="6" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:58:32000">
<Copy StartSeek="0" EndSeek="743"/>
<Insert>	return err;
</Insert>
<Copy StartSeek="771" EndSeek="965"/>
</Delta>
<Delta Version="7" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:58:59000">
<Copy StartSeek="0" EndSeek="384"/>
<Insert>
</Insert>
<Copy StartSeek="413" EndSeek="993"/>
</Delta>
<Delta Version="8" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:59:28000">
<Copy StartSeek="0" EndSeek="486"/>
<Insert>module_param_string(sym, sym, IFLISTSZ, 0600);
</Insert>
<Copy StartSeek="527" EndSeek="987"/>
</Delta>
<Delta Version="9" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:59:41000">
<Copy StartSeek="0" EndSeek="727"/>
<Insert>		pr_info("%s: %#x\n", sym, addr);
</Insert>
<Copy StartSeek="763" EndSeek="988"/>
</Delta>
<Delta Version="10" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="12:59:52000">
<Copy StartSeek="0" EndSeek="619"/>
<Insert>	int err = 0;
</Insert>
<Copy StartSeek="619" EndSeek="974"/>
</Delta>
<Delta Version="11" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="13:00:9000">
<Copy StartSeek="0" EndSeek="619"/>
<Insert>	unsigned long addr = 0;
</Insert>
<Copy StartSeek="640" EndSeek="970"/>
</Delta>
<Delta Version="12" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="13:00:17000">
<Copy StartSeek="0" EndSeek="661"/>
<Copy StartSeek="662" EndSeek="971"/>
</Delta>
<Delta Version="13" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="13:00:22000">
<Copy StartSeek="0" EndSeek="579"/>
<Insert>static int __init kallsyms_init(void)
</Insert>
<Copy StartSeek="613" EndSeek="840"/>
<Insert>module_init(kallsyms_init)
</Insert>
<Copy StartSeek="863" EndSeek="963"/>
</Delta>
<Delta Version="14" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="13:03:55000">
<Copy StartSeek="0" EndSeek="776"/>
<Insert>static void __exit kallsyms_exit(void)
</Insert>
<Copy StartSeek="816" EndSeek="864"/>
<Insert>module_exit(kallsyms_exit)
</Insert>
<Copy StartSeek="892" EndSeek="965"/>
</Delta>
<Delta Version="15" Comment="" NL="\10" Encoding="text" Date="2012/04/19" Time="13:04:6000">
<Copy StartSeek="0" EndSeek="427"/>
<Insert>#define pr_fmt(fmt)	"kallsyms: " fmt
</Insert>
<Copy StartSeek="465" EndSeek="966"/>
</Delta>
</DeltaFile>
