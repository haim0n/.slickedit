<!DOCTYPE DeltaFile SYSTEM "http://www.slickedit.com/dtd/vse/vsdelta/9.0/vsdelta.dtd">
<DeltaFile FormatVersion="9.0.0">
<MostRecent Version="69" Comment="" Date="2012/08/02" Time="16:22:2000" NL="\10" Encoding="text">
<Insert>#include &lt;linux/slab.h&gt;
#include "dpa_cls_mm.h"

/* HAIM FIXME : not SMP safe !! */
static unsigned long *dcm_head = NULL; 	/* chief head of the pool */
static unsigned long *dcm_fp = NULL; 	/* next free */
static uint32_t dcm_blks; 		/* number of available blocks */

#define dcm_dump() \
(pr_debug(KERN_ERR "(%s:%d) dcm_head %p, dcm_fp %p, blks %u\n",  \
	__func__, __LINE__,dcm_head, dcm_fp, dcm_blks))

/*allocates a single block of size blk_sz */
void *dcm_alloc(void)
{
	unsigned long *tmp;

	if (!dcm_blks)
		return NULL;
	
	tmp = dcm_fp;
	dcm_fp = (unsigned long *)*dcm_fp;
	*tmp = 0;
	dcm_blks--;

	return tmp;
}

void dcm_free(void *blk)
{
	*(unsigned long *)blk = (unsigned long)dcm_fp;
	dcm_fp = (unsigned long *)blk;
	dcm_blks++;
}

/* HAIM FIXME : alignment !!! */
void *dcm_init(uint32_t blks, uint32_t blk_sz)
{
	uint32_t i;
	unsigned long *tmp;

	dcm_head = kzalloc(blks * blk_sz, GFP_KERNEL);
	if (!dcm_head)
		return NULL;

	dcm_blks = blks;
	tmp = dcm_head;
	for (i = 0; i &lt; blks - 1; i++) {
		*tmp = (unsigned long)((unsigned char *)tmp + blk_sz);
		tmp = (unsigned long *)((unsigned char *)tmp + blk_sz);
	}
	*((unsigned char *)tmp + blk_sz) = 0;
	dcm_fp = dcm_head;

	return dcm_head;
}

void dcm_exit(void)
{
	if (dcm_head)
		kfree(dcm_head);
}
</Insert>
</MostRecent>
<Delta Version="0" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:24:8000">
<Insert>
</Insert>
<Copy StartSeek="22" EndSeek="116"/>
</Delta>
<Delta Version="1" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:25:23000">
<Copy StartSeek="0" EndSeek="22"/>
<Copy StartSeek="42" EndSeek="136"/>
</Delta>
<Delta Version="2" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:26:56000">
<Copy StartSeek="0" EndSeek="22"/>
<Insert>void *head = NULL;
</Insert>
<Copy StartSeek="45" EndSeek="140"/>
</Delta>
<Delta Version="3" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:27:7000">
<Copy StartSeek="0" EndSeek="97"/>
<Insert>	return kzalloc(size * num, GFP_KERNEL);
}
</Insert>
</Delta>
<Delta Version="4" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:27:27000">
<Copy StartSeek="26" EndSeek="188"/>
</Delta>
<Delta Version="5" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:27:42000">
<Insert>#include &lt;linux/kernel.h&gt;
</Insert>
<Copy StartSeek="24" EndSeek="186"/>
</Delta>
<Delta Version="6" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:27:54000">
<Copy StartSeek="0" EndSeek="24"/>
<Copy StartSeek="25" EndSeek="187"/>
</Delta>
<Delta Version="7" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:27:56000">
<Copy StartSeek="0" EndSeek="24"/>
<Insert>
</Insert>
<Copy StartSeek="24" EndSeek="186"/>
</Delta>
<Delta Version="8" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:27:57000">
<Copy StartSeek="0" EndSeek="70"/>
<Insert>int dpa_cls_mm_init(uint32_t num, uint32_t size)
</Insert>
<Copy StartSeek="121" EndSeek="188"/>
</Delta>
<Delta Version="9" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:28:17000">
<Copy StartSeek="0" EndSeek="188"/>
</Delta>
<Delta Version="10" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:30:18000">
<Copy StartSeek="0" EndSeek="69"/>
<Insert>
</Insert>
<Copy StartSeek="112" EndSeek="272"/>
</Delta>
<Delta Version="11" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:32:6000">
<Copy StartSeek="0" EndSeek="210"/>
<Copy StartSeek="240" EndSeek="302"/>
</Delta>
<Delta Version="12" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:32:43000">
<Copy StartSeek="0" EndSeek="46"/>
<Insert>void *dcm_head = NULL;
</Insert>
<Copy StartSeek="76" EndSeek="293"/>
<Copy StartSeek="294" EndSeek="310"/>
</Delta>
<Delta Version="13" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:35:49000">
<Copy StartSeek="0" EndSeek="76"/>
<Insert>atomic_t dcm_size; /* number of blocks */
</Insert>
<Copy StartSeek="118" EndSeek="310"/>
</Delta>
<Delta Version="14" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:36:37000">
<Copy StartSeek="0" EndSeek="119"/>
<Copy StartSeek="170" EndSeek="361"/>
</Delta>
<Delta Version="15" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:37:7000">
<Copy StartSeek="0" EndSeek="268"/>
<Insert>	atomic_set(&amp;dcm_size, num);
</Insert>
<Copy StartSeek="285" EndSeek="349"/>
</Delta>
<Delta Version="16" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:37:21000">
<Copy StartSeek="0" EndSeek="170"/>
<Insert>void *dpa_cls_mm_init(uint32_t num, uint32_t size)
</Insert>
<Copy StartSeek="230" EndSeek="358"/>
</Delta>
<Delta Version="17" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:37:40000">
<Copy StartSeek="0" EndSeek="119"/>
<Insert>/* num - number of blocks, size - sizeof(block) */
</Insert>
<Copy StartSeek="119" EndSeek="307"/>
</Delta>
<Delta Version="18" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:37:50000">
<Copy StartSeek="0" EndSeek="119"/>
<Insert>void *dpa_cls_mm_init(uint32_t blocks, uint32_t block_size)
</Insert>
<Copy StartSeek="173" EndSeek="175"/>
<Insert>	dcm_head = kzalloc(size * num, GFP_KERNEL);
</Insert>
<Copy StartSeek="223" EndSeek="304"/>
</Delta>
<Delta Version="19" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:38:14000">
<Copy StartSeek="0" EndSeek="223"/>
<Insert>	dcm_size = num;
</Insert>
<Copy StartSeek="241" EndSeek="305"/>
</Delta>
<Delta Version="20" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:38:21000">
<Copy StartSeek="0" EndSeek="76"/>
<Copy StartSeek="106" EndSeek="335"/>
</Delta>
<Delta Version="21" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:38:38000">
<Copy StartSeek="0" EndSeek="106"/>
<Copy StartSeek="107" EndSeek="254"/>
<Copy StartSeek="276" EndSeek="358"/>
</Delta>
<Delta Version="22" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:38:50000">
<Copy StartSeek="0" EndSeek="341"/>
<Insert>
	return head;
}
</Insert>
</Delta>
<Delta Version="23" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:40:11000">
<Copy StartSeek="0" EndSeek="106"/>
<Insert>
</Insert>
<Copy StartSeek="106" EndSeek="371"/>
<Insert>
</Insert>
<Copy StartSeek="385" EndSeek="397"/>
</Delta>
<Delta Version="24" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:40:24000">
<Copy StartSeek="0" EndSeek="106"/>
<Insert>uint32_t dcm_size; /* number of blocks */
</Insert>
<Copy StartSeek="155" EndSeek="404"/>
</Delta>
<Delta Version="25" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:40:26000">
<Copy StartSeek="0" EndSeek="106"/>
<Insert>static uint32_t dcm_size; /* number of blocks */
</Insert>
<Copy StartSeek="168" EndSeek="417"/>
</Delta>
<Delta Version="26" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:43:46000">
<Copy StartSeek="0" EndSeek="106"/>
<Insert>static uint32_t dcm_free_sz; /* number of available blocks */
</Insert>
<Copy StartSeek="165" EndSeek="414"/>
</Delta>
<Delta Version="27" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:44:13000">
<Copy StartSeek="0" EndSeek="106"/>
<Insert>static uint32_t dcm_size; /* number of available blocks */
</Insert>
<Copy StartSeek="165" EndSeek="414"/>
</Delta>
<Delta Version="28" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:44:21000">
<Copy StartSeek="0" EndSeek="292"/>
<Insert>	dcm_size = blks;
</Insert>
<Copy StartSeek="310" EndSeek="414"/>
</Delta>
<Delta Version="29" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:44:26000">
<Copy StartSeek="0" EndSeek="166"/>
<Insert>void *dpa_cls_mm_init(uint32_t blks, uint32_t blk_sz)
</Insert>
<Copy StartSeek="213" EndSeek="407"/>
</Delta>
<Delta Version="30" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:44:46000">
<Copy StartSeek="0" EndSeek="381"/>
<Insert>	dcm_size--;
</Insert>
<Copy StartSeek="394" EndSeek="407"/>
</Delta>
<Delta Version="31" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:45:4000">
<Copy StartSeek="0" EndSeek="166"/>
<Copy StartSeek="199" EndSeek="440"/>
</Delta>
<Delta Version="32" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:54:28000">
<Copy StartSeek="0" EndSeek="24"/>
<Copy StartSeek="47" EndSeek="271"/>
<Copy StartSeek="281" EndSeek="370"/>
<Copy StartSeek="371" EndSeek="474"/>
</Delta>
<Delta Version="33" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:55:0000">
<Copy StartSeek="0" EndSeek="271"/>
<Insert>	uint32_t
</Insert>
<Copy StartSeek="284" EndSeek="373"/>
<Insert>
</Insert>
<Copy StartSeek="437" EndSeek="540"/>
</Delta>
<Delta Version="34" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:57:32000">
<Copy StartSeek="0" EndSeek="407"/>
<Insert>		*dcm_next = ++dcm_next;
	}

</Insert>
<Copy StartSeek="453" EndSeek="556"/>
</Delta>
<Delta Version="35" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:57:41000">
<Copy StartSeek="0" EndSeek="452"/>
<Insert>
</Insert>
<Copy StartSeek="490" EndSeek="593"/>
</Delta>
<Delta Version="36" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="10:58:22000">
<Copy StartSeek="0" EndSeek="452"/>
<Insert>	*dcm_next = head;
</Insert>
<Copy StartSeek="477" EndSeek="599"/>
</Delta>
<Delta Version="37" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:01:42000">
<Copy StartSeek="0" EndSeek="332"/>
<Copy StartSeek="363" EndSeek="630"/>
</Delta>
<Delta Version="38" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:02:4000">
<Copy StartSeek="0" EndSeek="363"/>
<Copy StartSeek="364" EndSeek="631"/>
</Delta>
<Delta Version="39" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:02:5000">
<Copy StartSeek="0" EndSeek="284"/>
<Copy StartSeek="296" EndSeek="643"/>
</Delta>
<Delta Version="40" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:02:17000">
<Copy StartSeek="0" EndSeek="376"/>
<Insert>	dcm_next = dcm_head;
</Insert>
<Copy StartSeek="393" EndSeek="638"/>
</Delta>
<Delta Version="41" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:02:23000">
<Copy StartSeek="0" EndSeek="375"/>
<Insert>
	tmp = dcm_head;
</Insert>
<Copy StartSeek="375" EndSeek="393"/>
<Insert>
</Insert>
<Copy StartSeek="413" EndSeek="639"/>
</Delta>
<Delta Version="42" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:02:26000">
<Copy StartSeek="0" EndSeek="393"/>
<Copy StartSeek="394" EndSeek="411"/>
<Insert>	

</Insert>
<Copy StartSeek="411" EndSeek="637"/>
</Delta>
<Delta Version="43" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:02:31000">
<Copy StartSeek="0" EndSeek="445"/>
<Insert>		*dcm_next = dcm_next + 1;
		dcm_next++;
</Insert>
<Copy StartSeek="472" EndSeek="622"/>
</Delta>
<Delta Version="44" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:02:39000">
<Copy StartSeek="0" EndSeek="475"/>
<Insert>	*(dcm_next + 1) = head;
</Insert>
<Copy StartSeek="495" EndSeek="617"/>
</Delta>
<Delta Version="45" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:02:45000">
<Copy StartSeek="0" EndSeek="69"/>
<Insert>static void *dcm_head = NULL;
static void *dcm_next = NULL;
</Insert>
<Copy StartSeek="174" EndSeek="662"/>
</Delta>
<Delta Version="46" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:04:3000">
<Copy StartSeek="0" EndSeek="69"/>
<Insert>static void *dcm_head = NULL; /* chief head of the pool */
static void *dcm_next = NULL; /* next free */
static uint32_t dcm_blks; /* number of available blocks */
</Insert>
<Copy StartSeek="236" EndSeek="665"/>
</Delta>
<Delta Version="47" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:04:10000">
<Copy StartSeek="0" EndSeek="344"/>
<Copy StartSeek="345" EndSeek="666"/>
</Delta>
<Delta Version="48" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:04:19000">
<Copy StartSeek="0" EndSeek="609"/>
<Copy StartSeek="622" EndSeek="679"/>
</Delta>
<Delta Version="49" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:04:38000">
<Copy StartSeek="0" EndSeek="666"/>
<Insert>
</Insert>
<Copy StartSeek="706" EndSeek="718"/>
</Delta>
<Delta Version="50" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:05:6000">
<Copy StartSeek="0" EndSeek="129"/>
<Insert>static void *dcm_next = NULL; 	/* next free */
</Insert>
<Copy StartSeek="176" EndSeek="544"/>
<Insert>	dcm_next = head;
</Insert>
<Copy StartSeek="562" EndSeek="666"/>
<Insert>	tmp = dcm_next;
	dcm_next = *dcm_next;
</Insert>
<Copy StartSeek="707" EndSeek="719"/>
</Delta>
<Delta Version="51" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:05:19000">
<Copy StartSeek="0" EndSeek="653"/>
<Insert>	dcm_blks--;
</Insert>
<Copy StartSeek="655" EndSeek="695"/>
<Insert>
</Insert>
<Copy StartSeek="723" EndSeek="735"/>
</Delta>
<Delta Version="52" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:06:23000">
<Copy StartSeek="0" EndSeek="723"/>
<Insert>	return ;
</Insert>
<Copy StartSeek="736" EndSeek="738"/>
</Delta>
<Delta Version="53" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:06:30000">
<Copy StartSeek="0" EndSeek="584"/>
<Insert>
</Insert>
<Copy StartSeek="584" EndSeek="737"/>
</Delta>
<Delta Version="54" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:06:55000">
<Copy StartSeek="0" EndSeek="738"/>
<Insert>void *dcm_free(void)
</Insert>
<Copy StartSeek="764" EndSeek="769"/>
</Delta>
<Delta Version="55" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:07:34000">
<Copy StartSeek="0" EndSeek="524"/>
<Insert>	*(tmp + 1) = head;
</Insert>
<Copy StartSeek="544" EndSeek="769"/>
</Delta>
<Delta Version="56" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:10:53000">
<Copy StartSeek="0" EndSeek="766"/>
<Insert>
</Insert>
<Copy StartSeek="784" EndSeek="786"/>
</Delta>
<Delta Version="57" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:15:38000">
<Copy StartSeek="0" EndSeek="784"/>
<Insert>}
</Insert>
</Delta>
<Delta Version="58" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:15:53000">
<Copy StartSeek="0" EndSeek="802"/>
<Insert>}
</Insert>
</Delta>
<Delta Version="59" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:16:10000">
<Copy StartSeek="0" EndSeek="803"/>
<Insert>
}
</Insert>
</Delta>
<Delta Version="60" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:17:2000">
<Copy StartSeek="0" EndSeek="803"/>
<Insert>}
</Insert>
</Delta>
<Delta Version="61" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:17:27000">
<Copy StartSeek="0" EndSeek="803"/>
<Insert>	dcm_blks++''
</Insert>
<Copy StartSeek="816" EndSeek="818"/>
</Delta>
<Delta Version="62" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:17:28000">
<Copy StartSeek="0" EndSeek="738"/>
<Insert>void *dcm_free(void *blk)
</Insert>
<Copy StartSeek="763" EndSeek="817"/>
</Delta>
<Delta Version="63" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:17:34000">
<Copy StartSeek="0" EndSeek="69"/>
<Copy StartSeek="110" EndSeek="858"/>
</Delta>
<Delta Version="64" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:22:16000">
<Copy StartSeek="0" EndSeek="69"/>
<Insert>/* HAIM FIXME : should be SMP safe !! */
</Insert>
<Copy StartSeek="104" EndSeek="852"/>
</Delta>
<Delta Version="65" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:22:22000">
<Copy StartSeek="0" EndSeek="852"/>
</Delta>
<Delta Version="66" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:28:45000">
<Copy StartSeek="0" EndSeek="852"/>
<Insert>

</Insert>
</Delta>
<Delta Version="67" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="11:28:47000">
<Copy StartSeek="0" EndSeek="24"/>
<Insert>#include &lt;dpa_types.h&gt;
#include "dpa_cls.h"

</Insert>
<Copy StartSeek="49" EndSeek="84"/>
<Insert>static void *dcm_head = NULL; 	/* chief head of the pool */
static void *dcm_free = NULL; 	/* next free */
static uint32_t dcm_blks; 	/* number of available blocks */
</Insert>
<Copy StartSeek="268" EndSeek="269"/>
<Copy StartSeek="731" EndSeek="826"/>
<Insert>	void *tmp;
</Insert>
<Copy StartSeek="847" EndSeek="927"/>
<Copy StartSeek="928" EndSeek="946"/>
<Insert>
</Insert>
<Copy StartSeek="946" EndSeek="997"/>
<Insert>		*tmp = tmp + 1;
		tmp++;
</Insert>
<Copy StartSeek="1112" EndSeek="1115"/>
<Insert>	*(tmp + 1) = NULL;
	dcm_free = head;
</Insert>
<Copy StartSeek="1174" EndSeek="1196"/>
<Insert>void *dcm_alloc(void)
</Insert>
<Copy StartSeek="1216" EndSeek="1218"/>
<Insert>	void *tmp;

	if (!dcm_size)
		return NULL;
	
	tmp = dcm_free;
	dcm_free = *dcm_free;
	*tmp = NULL;
	dcm_blks--;

	return tmp;
}

void dcm_free(void *blk)
{
	*blk = dcm_free;
	*dcm_free = blk;

	dcm_blks++;
}
</Insert>
</Delta>
<Delta Version="68" Comment="" NL="\10" Encoding="text" Date="2012/08/02" Time="16:21:55000">
<Copy StartSeek="0" EndSeek="407"/>
<Insert>/*allocates a single block */
</Insert>
<Copy StartSeek="452" EndSeek="1269"/>
</Delta>
</DeltaFile>
