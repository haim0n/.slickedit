<!DOCTYPE DeltaFile SYSTEM "http://www.slickedit.com/dtd/vse/vsdelta/9.0/vsdelta.dtd">
<DeltaFile FormatVersion="9.0.0">
<MostRecent Version="57" Comment="" Date="2013/02/28" Time="09:54:49000" NL="\10" Encoding="text">
<Insert>#include &lt;dpa_os.h&gt;
#include &lt;util/string.h&gt;
#include "dpa_cls_mm.h"

#define MM_POOLS 2
/* HAIM FIXME : not SMP safe !! */
static unsigned long *dcm_head = NULL; 	/* chief head of the pool */
static unsigned long *dcm_fp = NULL; 	/* next free */

static unsigned long *mm_pool[MM_POOLS]; /* list of the mm pools */
static uint32_t dcm_blks; 		/* number of available blocks */

#define dcm_dump() \
(pr_debug(KERN_ERR "(%s:%d) dcm_head %p, dcm_fp %p, blks %u\n",  \
	__func__, __LINE__,dcm_head, dcm_fp, dcm_blks))

/*allocates a single block of size blk_sz */
void *dcm_alloc(void)
{
	unsigned long *tmp;

	if (!dcm_blks)
		return NULL;
	
	tmp = dcm_fp;
	dcm_fp = (unsigned long *)*dcm_fp;
	*tmp = 0;
	dcm_blks--;

	return tmp;
}

void dcm_free(void *blk)
{
	*(unsigned long *)blk = (unsigned long)dcm_fp;
	dcm_fp = (unsigned long *)blk;
	dcm_blks++;
}

/* HAIM FIXME : alignment !!! */
void *dcm_init(uint32_t blks, uint32_t blk_sz)
{
	uint32_t i;
	unsigned long *tmp;

	dcm_head = dpa_os_malloc(blks * blk_sz);
	if (!dcm_head)
		return NULL;

	dpa_memset(dcm_head, 0, blks * blk_sz);

	dcm_blks = blks;
	tmp = dcm_head;
	for (i = 0; i &lt; blks - 1; i++) {
		*tmp = (unsigned long)((unsigned char *)tmp + blk_sz);
		tmp = (unsigned long *)((unsigned char *)tmp + blk_sz);
	}
	*((unsigned char *)tmp + blk_sz) = 0;
	dcm_fp = dcm_head;

	return dcm_head;
}

void dcm_exit(void)
{
	if (dcm_head)
		dpa_os_free(dcm_head);
}
</Insert>
</MostRecent>
<Delta Version="0" Comment="" NL="\10" Encoding="text" Date="2012/08/09" Time="12:43:47000">
<Copy StartSeek="0" EndSeek="958"/>
<Insert>  dpa_memset(dcm_head, 0, blks * blk_sz);
</Insert>
<Copy StartSeek="999" EndSeek="1332"/>
</Delta>
<Delta Version="1" Comment="" NL="\10" Encoding="text" Date="2012/08/09" Time="14:17:27000">
<Copy StartSeek="0" EndSeek="228"/>
<Insert>static uint32_t dcm_blks; 		/* number of available blocks */
</Insert>
<Copy StartSeek="293" EndSeek="1336"/>
</Delta>
<Delta Version="2" Comment="" NL="\10" Encoding="text" Date="2012/08/12" Time="15:55:1000">
<Copy StartSeek="0" EndSeek="228"/>
<Insert>static uint32_t dcm_blks = 0; 		/* number of available blocks */
</Insert>
<Copy StartSeek="289" EndSeek="1332"/>
</Delta>
<Delta Version="3" Comment="" NL="\10" Encoding="text" Date="2012/08/12" Time="15:55:11000">
<Copy StartSeek="0" EndSeek="45"/>
<Copy StartSeek="66" EndSeek="1353"/>
</Delta>
<Delta Version="4" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:46:50000">
<Copy StartSeek="0" EndSeek="332"/>
<Insert>(pr_debug(KERN_ERR "(%s:%d) dcm_head %p, dcm_fp %p, blks %u\n",  \
</Insert>
<Copy StartSeek="398" EndSeek="448"/>
<Copy StartSeek="647" EndSeek="1551"/>
</Delta>
<Delta Version="5" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:47:44000">
<Copy StartSeek="0" EndSeek="1465"/>
<Insert>
</Insert>
<Copy StartSeek="1479" EndSeek="1564"/>
</Delta>
<Delta Version="6" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:48:10000">
<Copy StartSeek="0" EndSeek="1465"/>
<Insert>	dcm_dump()''
</Insert>
<Copy StartSeek="1478" EndSeek="1563"/>
</Delta>
<Delta Version="7" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:48:12000">
<Copy StartSeek="0" EndSeek="332"/>
<Insert>(DPA_DBG(KERN_ERR "(%s:%d) dcm_head %p, dcm_fp %p, blks %u\n",  \
</Insert>
<Copy StartSeek="389" EndSeek="1554"/>
</Delta>
<Delta Version="8" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:48:39000">
<Copy StartSeek="0" EndSeek="332"/>
<Insert>(DPA_DBG("(%s:%d) dcm_head %p, dcm_fp %p, blks %u\n",  \
	__func__, __LINE__,dcm_head, dcm_fp, dcm_blks))
</Insert>
<Copy StartSeek="437" EndSeek="1553"/>
</Delta>
<Delta Version="9" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:48:48000">
<Copy StartSeek="0" EndSeek="1455"/>
<Insert>	dcm_dump();
</Insert>
<Copy StartSeek="1557" EndSeek="1642"/>
</Delta>
<Delta Version="10" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:49:54000">
<Copy StartSeek="0" EndSeek="1455"/>
<Insert>	DPA_DBG("(%s:%d) dcm_head %p, dcm_fp %p, blks %u\n",
	__func__, __LINE__,dcm_head, dcm_fp, dcm_blks)
</Insert>
<Copy StartSeek="1559" EndSeek="1644"/>
</Delta>
<Delta Version="11" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:50:1000">
<Copy StartSeek="0" EndSeek="1455"/>
<Insert>	DPA_DBG("(%s:%d) dcm_head %p, dcm_fp %p, blks %u\n", 
</Insert>
<Copy StartSeek="1521" EndSeek="1655"/>
</Delta>
<Delta Version="12" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:50:38000">
<Copy StartSeek="0" EndSeek="1521"/>
<Insert>		__func__, __LINE__,dcm_head, dcm_fp, dcm_blks)
</Insert>
<Copy StartSeek="1578" EndSeek="1663"/>
</Delta>
<Delta Version="13" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:50:43000">
<Copy StartSeek="0" EndSeek="1455"/>
<Insert>	DPA_DBG("(%s:%d) dcm_head %p, dcm_fp %p, blks %u, blk_sz %u\n", 
		__func__, __LINE__,dcm_head, dcm_fp, dcm_blks, blk_sz)
</Insert>
<Copy StartSeek="1552" EndSeek="1637"/>
</Delta>
<Delta Version="14" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="14:52:6000">
<Copy StartSeek="0" EndSeek="1455"/>
<Insert>	DPA_DBG("dcm_head %p, dcm_fp %p, blks %u, blk_sz %u\n", 
		,dcm_head, dcm_fp, dcm_blks, blk_sz)
</Insert>
<Copy StartSeek="1551" EndSeek="1636"/>
</Delta>
<Delta Version="15" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="15:20:52000">
<Copy StartSeek="0" EndSeek="311"/>
<Insert>#define dcm_dump() \
	DPA_DBG("(%s:%d) dcm_head %p, dcm_fp %p, blks %u\n",  \
	__func__, __LINE__,dcm_head, dcm_fp, dcm_blks)

</Insert>
<Copy StartSeek="311" EndSeek="1509"/>
</Delta>
<Delta Version="16" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:07:9000">
<Copy StartSeek="0" EndSeek="126"/>
<Insert>static unsigned long *dcm_head = NULL; 	/* chief head of the pool */
</Insert>
<Copy StartSeek="259" EndSeek="1573"/>
</Delta>
<Delta Version="17" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:18:4000">
<Copy StartSeek="0" EndSeek="185"/>
<Insert>static unsigned long *dcm_head = NULL; 	/* chief head of the aligned mm*/
</Insert>
<Copy StartSeek="260" EndSeek="1574"/>
</Delta>
<Delta Version="18" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:18:5000">
<Copy StartSeek="0" EndSeek="1532"/>
<Insert>	if (dcm_head)
		dpa_os_free(dcm_head);
</Insert>
<Copy StartSeek="1572" EndSeek="1574"/>
</Delta>
<Delta Version="19" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:18:28000">
<Copy StartSeek="0" EndSeek="1572"/>
<Insert>}
</Insert>
</Delta>
<Delta Version="20" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:19:54000">
<Copy StartSeek="0" EndSeek="1572"/>
<Insert>
	dcm_pool = NULL;
}
</Insert>
</Delta>
<Delta Version="21" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:20:22000">
<Copy StartSeek="0" EndSeek="947"/>
<Insert>void *dcm_init(uint32_t blks, uint32_t blk_sz)
</Insert>
<Copy StartSeek="1013" EndSeek="1049"/>
<Insert>
</Insert>
<Copy StartSeek="1100" EndSeek="1643"/>
</Delta>
<Delta Version="22" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:21:59000">
<Copy StartSeek="0" EndSeek="1049"/>
<Insert>	unsigned long total_sz = blks * blk_sz + ALIGN()
</Insert>
<Copy StartSeek="1090" EndSeek="1634"/>
</Delta>
<Delta Version="23" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:24:18000">
<Copy StartSeek="0" EndSeek="1091"/>
<Insert>	dcm_head = dpa_os_malloc(blks * blk_sz);
</Insert>
<Copy StartSeek="1128" EndSeek="1629"/>
</Delta>
<Delta Version="24" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:24:41000">
<Copy StartSeek="0" EndSeek="1049"/>
<Insert>	unsigned long total_sz = blks * blk_sz;
</Insert>
<Copy StartSeek="1102" EndSeek="1103"/>
<Insert>	dcm_head = dpa_os_malloc(total_sz);
</Insert>
<Copy StartSeek="1141" EndSeek="1642"/>
</Delta>
<Delta Version="25" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:24:53000">
<Copy StartSeek="0" EndSeek="1103"/>
<Insert>	dcm_head = dpa_os_malloc(total_sz );
</Insert>
<Copy StartSeek="1140" EndSeek="1641"/>
</Delta>
<Delta Version="26" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:24:55000">
<Copy StartSeek="0" EndSeek="1172"/>
<Insert>	dpa_memset(dcm_head, 0, blks * blk_sz);
</Insert>
<Copy StartSeek="1208" EndSeek="1636"/>
</Delta>
<Delta Version="27" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:25:19000">
<Copy StartSeek="0" EndSeek="1171"/>
<Insert>
</Insert>
<Copy StartSeek="1203" EndSeek="1667"/>
</Delta>
<Delta Version="28" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:25:44000">
<Copy StartSeek="0" EndSeek="1171"/>
<Copy StartSeek="1172" EndSeek="1668"/>
</Delta>
<Delta Version="29" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:25:45000">
<Copy StartSeek="0" EndSeek="1172"/>
<Insert>	dcm_pool = ALIGN_UP(dcm_head);
</Insert>
<Copy StartSeek="1172" EndSeek="1208"/>
<Insert>
</Insert>
<Copy StartSeek="1243" EndSeek="1670"/>
</Delta>
<Delta Version="30" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:25:50000">
<Copy StartSeek="0" EndSeek="1240"/>
<Insert>	

</Insert>
<Copy StartSeek="1241" EndSeek="1668"/>
</Delta>
<Delta Version="31" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:25:59000">
<Copy StartSeek="0" EndSeek="1103"/>
<Insert>	dcm_head = dpa_os_malloc(total_sz);
</Insert>
<Copy StartSeek="1140" EndSeek="1668"/>
</Delta>
<Delta Version="32" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:26:17000">
<Copy StartSeek="0" EndSeek="1140"/>
<Insert>	if (!dcm_head)
</Insert>
<Copy StartSeek="1156" EndSeek="1668"/>
</Delta>
<Delta Version="33" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:26:22000">
<Copy StartSeek="0" EndSeek="1172"/>
<Insert>	dpa_memset(dcm_head, 0, total_sz);
</Insert>
<Copy StartSeek="1208" EndSeek="1668"/>
</Delta>
<Delta Version="34" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:26:32000">
<Copy StartSeek="0" EndSeek="1208"/>
<Insert>	dcm_pool = ALIGN_UP(dcm_head);
</Insert>
<Copy StartSeek="1240" EndSeek="1668"/>
</Delta>
<Delta Version="35" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:26:46000">
<Copy StartSeek="0" EndSeek="1208"/>
<Insert>	dcm_head = ALIGN_UP(dcm_pool);
</Insert>
<Copy StartSeek="1244" EndSeek="1672"/>
</Delta>
<Delta Version="36" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:31:45000">
<Copy StartSeek="0" EndSeek="947"/>
<Insert>void *dcm_init(uint32_t blks, uint32_t blk_sz, uint32_t align_sz)
</Insert>
<Copy StartSeek="1010" EndSeek="1205"/>
<Insert>	dcm_head = MEM_ALIGN_UP(dcm_pool);
</Insert>
<Copy StartSeek="1248" EndSeek="1676"/>
</Delta>
<Delta Version="37" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:32:2000">
<Copy StartSeek="0" EndSeek="45"/>
<Copy StartSeek="67" EndSeek="1698"/>
</Delta>
<Delta Version="38" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:34:23000">
<Copy StartSeek="0" EndSeek="1227"/>
<Insert>	dcm_head = MEM_ALIGN_UP(dcm_pool, align);
</Insert>
<Copy StartSeek="1280" EndSeek="1708"/>
</Delta>
<Delta Version="39" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:43:36000">
<Copy StartSeek="0" EndSeek="1227"/>
<Insert>	dcm_head = MEM_ALIGN_UP((uint32_t)dcm_pool, align);
</Insert>
<Copy StartSeek="1280" EndSeek="1708"/>
</Delta>
<Delta Version="40" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:44:45000">
<Copy StartSeek="0" EndSeek="1227"/>
<Insert>	dcm_head = (uint32_t)MEM_ALIGN_UP(dcm_pool, align);
</Insert>
<Copy StartSeek="1294" EndSeek="1722"/>
</Delta>
<Delta Version="41" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:45:4000">
<Copy StartSeek="0" EndSeek="1227"/>
<Insert>	dcm_head = (static unsigned long *)MEM_ALIGN_UP(dcm_pool, align);
</Insert>
<Copy StartSeek="1287" EndSeek="1715"/>
</Delta>
<Delta Version="42" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:45:20000">
<Copy StartSeek="0" EndSeek="1227"/>
<Insert>	dcm_head = (unsigned long *)MEM_ALIGN_UP(dcm_pool, align);
</Insert>
<Copy StartSeek="1285" EndSeek="1713"/>
</Delta>
<Delta Version="43" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:45:30000">
<Copy StartSeek="0" EndSeek="1227"/>
<Insert>	dcm_head = (unsigned long)MEM_ALIGN_UP(dcm_pool, align);
</Insert>
<Copy StartSeek="1287" EndSeek="1715"/>
</Delta>
<Delta Version="44" Comment="" NL="\10" Encoding="text" Date="2012/09/09" Time="16:45:33000">
<Copy StartSeek="0" EndSeek="1534"/>
<Insert>	DPA_DBG("dcm_head %p, dcm_fp %p, blks %u, blk_sz %u\n" ,dcm_head, 
</Insert>
<Copy StartSeek="1606" EndSeek="1719"/>
</Delta>
<Delta Version="45" Comment="" NL="\10" Encoding="text" Date="2012/09/19" Time="17:04:22000">
<Copy StartSeek="0" EndSeek="45"/>
<Insert>#include &lt;util/mem.h&gt;
#include &lt;log/log.h&gt;
</Insert>
<Copy StartSeek="45" EndSeek="105"/>
<Insert>static unsigned long *dcm_pool = NULL; 	/* unaligned mm */
static unsigned long *dcm_head = NULL; 	/* chief head of the aligned mm */
</Insert>
<Copy StartSeek="174" EndSeek="290"/>
<Insert>#ifdef __DPA_DEBUG__
#define DPA_CLS_DBG(format, args...) DPA_DBG(format, ##args)
#else
#define DPA_CLS_DBG(format, args...) 
#endif

#define DPA_CLS_ERR(format, args...) DPA_ERROR(format, ##args)


</Insert>
<Copy StartSeek="428" EndSeek="800"/>
<Insert>void *dcm_init(uint32_t blks, uint32_t blk_sz, uint32_t align)
</Insert>
<Copy StartSeek="847" EndSeek="883"/>
<Insert>	unsigned long total_sz = blks * blk_sz + align - 1;

	dcm_pool = dpa_os_malloc(total_sz);
	if (!dcm_pool)
</Insert>
<Copy StartSeek="942" EndSeek="958"/>
<Insert>	dpa_memset(dcm_pool, 0, total_sz);
	dcm_head = (unsigned long *)MEM_ALIGN_UP(dcm_pool, align);

</Insert>
<Copy StartSeek="1000" EndSeek="1246"/>
<Insert>	DPA_CLS_DBG("dcm_head %p, dcm_fp %p, blks %u, blk_sz %u\n" ,dcm_head, 
		dcm_fp, dcm_blks, blk_sz)
</Insert>
<Copy StartSeek="1247" EndSeek="1290"/>
<Insert>	if (dcm_pool)
		dpa_os_free(dcm_pool);
</Insert>
<Copy StartSeek="1330" EndSeek="1332"/>
</Delta>
<Delta Version="46" Comment="" NL="\10" Encoding="text" Date="2012/10/16" Time="12:55:25000">
<Copy StartSeek="0" EndSeek="311"/>
<Insert>(pr_debug(KERN_ERR "(%s:%d) dcm_head %p, dcm_fp %p, blks %u\n",  \
</Insert>
<Copy StartSeek="382" EndSeek="804"/>
<Insert>void *dcm_init(uint32_t blks, uint32_t blk_sz)
</Insert>
<Copy StartSeek="855" EndSeek="892"/>
<Insert>	dcm_head = dpa_os_malloc(blks * blk_sz);
</Insert>
<Copy StartSeek="938" EndSeek="970"/>
<Insert>	dpa_memset(dcm_head, 0, blks * blk_sz);
</Insert>
<Copy StartSeek="1015" EndSeek="1016"/>
<Insert>	dcm_blks = blks;
</Insert>
<Copy StartSeek="1038" EndSeek="1055"/>
<Insert>	for (i = 0; i &lt; blks - 1; i++) {
</Insert>
<Copy StartSeek="1093" EndSeek="1356"/>
</Delta>
<Delta Version="47" Comment="" NL="\10" Encoding="text" Date="2013/02/28" Time="09:47:44000">
<Copy StartSeek="0" EndSeek="311"/>
<Insert>(pr_debug(KERN_ERR "(%s:%d) dcm_head %p, dcm_fp %p, num_blks %u\n",  \
</Insert>
<Copy StartSeek="378" EndSeek="800"/>
<Insert>void *dcm_init(uint32_t num_blks, uint32_t blk_sz)
</Insert>
<Copy StartSeek="873" EndSeek="910"/>
<Insert>	dcm_head = dpa_os_malloc(num_blks * blk_sz);
</Insert>
<Copy StartSeek="952" EndSeek="984"/>
<Insert>	dpa_memset(dcm_head, 0, num_blks * blk_sz);
</Insert>
<Copy StartSeek="1025" EndSeek="1026"/>
<Insert>	dcm_blks = num_blks;
</Insert>
<Copy StartSeek="1044" EndSeek="1061"/>
<Insert>	for (i = 0; i &lt; num_blks - 1; i++) {
</Insert>
<Copy StartSeek="1095" EndSeek="1358"/>
</Delta>
<Delta Version="48" Comment="" NL="\10" Encoding="text" Date="2013/02/28" Time="09:48:29000">
<Copy StartSeek="0" EndSeek="105"/>
<Insert>static unsigned long *dcm_head = NULL; 	/* chief head of the pool */
</Insert>
<Copy StartSeek="176" EndSeek="1360"/>
</Delta>
<Delta Version="49" Comment="" NL="\10" Encoding="text" Date="2013/02/28" Time="09:48:32000">
<Copy StartSeek="0" EndSeek="802"/>
<Insert>void *dcm_init(uint32_t blks, uint32_t blk_sz, unsigned long **dcm_head)
</Insert>
<Copy StartSeek="866" EndSeek="1351"/>
</Delta>
<Delta Version="50" Comment="" NL="\10" Encoding="text" Date="2013/02/28" Time="09:49:5000">
<Copy StartSeek="0" EndSeek="802"/>
<Insert>void *dcm_init(uint32_t blks, uint32_t blk_sz, void **dcm_head)
</Insert>
<Copy StartSeek="875" EndSeek="912"/>
<Insert>	dcm_head = dpa_os_malloc(blks * blk_sz);
</Insert>
<Copy StartSeek="955" EndSeek="1361"/>
</Delta>
<Delta Version="51" Comment="" NL="\10" Encoding="text" Date="2013/02/28" Time="09:49:48000">
<Copy StartSeek="0" EndSeek="912"/>
<Insert>	*dcm_head = dpa_os_malloc(blks * blk_sz);
</Insert>
<Copy StartSeek="954" EndSeek="1360"/>
</Delta>
<Delta Version="52" Comment="" NL="\10" Encoding="text" Date="2013/02/28" Time="09:50:10000">
<Copy StartSeek="0" EndSeek="105"/>
<Insert>//static unsigned long *dcm_head = NULL; 	/* chief head of the pool */
</Insert>
<Copy StartSeek="174" EndSeek="800"/>
<Insert>void *dcm_init(uint32_t blks, uint32_t blk_sz, unsigned long **dcm_head)
</Insert>
<Copy StartSeek="847" EndSeek="1332"/>
</Delta>
<Delta Version="53" Comment="" NL="\10" Encoding="text" Date="2013/02/28" Time="09:53:16000">
<Copy StartSeek="0" EndSeek="228"/>
<Copy StartSeek="269" EndSeek="1373"/>
</Delta>
<Delta Version="54" Comment="" NL="\10" Encoding="text" Date="2013/02/28" Time="09:54:9000">
<Copy StartSeek="0" EndSeek="228"/>
<Insert>static unsigned long *mm_pool[MM_POOLS];
</Insert>
<Copy StartSeek="294" EndSeek="1398"/>
</Delta>
<Delta Version="55" Comment="" NL="\10" Encoding="text" Date="2013/02/28" Time="09:54:23000">
<Copy StartSeek="0" EndSeek="70"/>
<Copy StartSeek="89" EndSeek="1417"/>
</Delta>
<Delta Version="56" Comment="" NL="\10" Encoding="text" Date="2013/02/28" Time="09:54:34000">
<Copy StartSeek="0" EndSeek="248"/>
<Insert>static unsigned long *mm_pool[MM_POOLS]; // list of the mm pools
</Insert>
<Copy StartSeek="316" EndSeek="1420"/>
</Delta>
</DeltaFile>
