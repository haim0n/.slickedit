<!DOCTYPE DeltaFile SYSTEM "http://www.slickedit.com/dtd/vse/vsdelta/9.0/vsdelta.dtd">
<DeltaFile FormatVersion="9.0.0">
<MostRecent Version="231" Comment="" Date="2013/06/26" Time="15:11:7000" NL="\10" Encoding="text">
<Insert>#include &lt;util/timer.h&gt;
#include "dpa_policer.h"

// #define __DPA_DEBUG__

#ifdef __DPA_DEBUG__
int printk(const char * fmt, ...);
#define DPA_POLICE_DBG(format, args...) printk(format"\n", ##args)
#else
#define DPA_POLICE_DBG(format, args...)
#endif

struct dpa_policer {
	unsigned long tokens;		/* token = byte */
	unsigned long burst_size;	/* in bytes */
	unsigned long fill_quanta; 	/* added toks at each tick */
	int           is_active;	
};

#define DPA_POLICERS (DPA_PORT_POLICERS + DPA_FLOW_GRP_POLICERS)

/* HAIM FIXME : Not SMP safe ! */
static struct dpa_policer policers[DPA_POLICERS];
static struct dpa_policer *flow_policers[DPA_FLOW_GRP_POLICERS];
static struct dpa_policer *port_policers[DPA_PORT_POLICERS];

static void dpa_policer_dump(struct dpa_policer *policer)
{
	DPA_POLICE_DBG("policer %p, burst %lu, fill_qnt %lu, act %lu, toks %lu",
		       policer, policer-&gt;burst_size,
		       policer-&gt;fill_quanta, 
		       policer-&gt;is_active, 
		       policer-&gt;tokens);
}

void *dpa_policer_flow_get(int policer_idx)
{
	if (policer_idx &gt;= DPA_FLOW_GRP_POLICERS || policer_idx &lt; 0) {
		return NULL;
	}
	return flow_policers[policer_idx];
}

void *dpa_policer_port_get(int port)
{
	DPA_POLICE_DBG("port_get: port %lu", port);
	if (port &gt;= DPA_PORT_POLICERS || port &lt; 0) {
		return NULL;
	}
	DPA_POLICE_DBG("port_get: port %lu, policer %p", port, port_policers[port]);
	return port_policers[port];
}

void dpa_policer_flow_del(int policer_idx)
{
	struct dpa_policer *p;

	if (policer_idx &gt;= DPA_FLOW_GRP_POLICERS || policer_idx &lt; 0)
		return;

	p = flow_policers[policer_idx];
	if (!p)
		return;
	
	p-&gt;is_active = 0;
	flow_policers[policer_idx] = NULL;
}

void dpa_policer_port_del(int port)
{
	struct dpa_policer *p;

	if (port &gt;= DPA_PORT_POLICERS || port &lt; 0)
		return;

	p = port_policers[port];
	if (!p)
		return;

	p-&gt;is_active = 0;
	port_policers[port] = 0;
}

int dpa_policer_flow_add(void *policer, int policer_idx)
{
	struct dpa_policer *p = (struct dpa_policer *) policer;
	if (policer_idx &gt;= DPA_FLOW_GRP_POLICERS || policer_idx &lt; 0) {
		return DPA_INVALID_PARAM;
	}
	flow_policers[policer_idx] = p;
	return DPA_OK;
}

int dpa_policer_port_add(void *policer, int port)
{
	struct dpa_policer *p = (struct dpa_policer *) policer;

	DPA_POLICE_DBG("port_add: policer %p port %lu", p, port);
	if (port &gt;= DPA_PORT_POLICERS || port &lt; 0) {
		return DPA_INVALID_PARAM;
	}
	port_policers[port] = p;
	return DPA_OK;
}

int dpa_policer_flow_do(int policer_idx, unsigned long data_len)
{
	if (policer_idx &gt;= DPA_FLOW_GRP_POLICERS|| policer_idx &lt; 0) {
		return DPA_POLICE_OK; /* passthrough by default */
	}	
	return dpa_policer_do(flow_policers[policer_idx], data_len);
}

int dpa_policer_port_do(int port, unsigned long data_len)
{
	return dpa_policer_do(port_policers[port], data_len);
}

/* data_len [bytes] */
int dpa_policer_do(void *policer, unsigned long data_len)
{
	struct dpa_policer *p = (struct dpa_policer *)policer;

	if (!p) {
		return DPA_POLICE_OK; /* passthrough by default */
	}
//      DPA_POLICE_DBG("data_len %lu",data_len);
	if (p-&gt;tokens &gt;= data_len) {
		p-&gt;tokens -= data_len;
		return DPA_POLICE_OK;
	}
	return DPA_POLICE_DROP;
}

static struct dpa_policer *get_free_policer(void)
{
	int i;
	struct dpa_policer *policer = policers;

	for (i = 0; i &lt; DPA_POLICERS; i++) {
		if (!policer-&gt;is_active)
			return policer;
		policer++;
	}
	return NULL;
}


int dpa_policer_cfg(void *policer, unsigned long rate,
		unsigned long burst_size, unsigned long timer_res)
{
	struct dpa_policer *p = (struct dpa_policer *) policer;
	unsigned long default_burst_size;

	if (!p)
		return DPA_INVALID_PARAM;
	
	rate = rate * (1000 / 8);
	p-&gt;fill_quanta = rate / timer_res;

	default_burst_size = 2 * p-&gt;fill_quanta;
	if (default_burst_size &lt; DPA_POLICER_MIN_BURST) {
		default_burst_size = DPA_POLICER_MIN_BURST;
	}
	/* convert to bytes */
	burst_size = burst_size * (1000 / 8);
	burst_size  = (burst_size &gt; default_burst_size) ?
		burst_size : default_burst_size;

	p-&gt;burst_size = burst_size;
	p-&gt;tokens = burst_size;

	p-&gt;is_active = (rate != 0);
	dpa_policer_dump(policer);
	return DPA_OK;
}

void *dpa_policer_alloc(void)
{
	struct dpa_policer *policer = get_free_policer();
	if (!policer)
		return NULL;

	return policer;
}

static void dpa_policer_fill_tokens(struct dpa_policer *policer)
{
	policer-&gt;tokens += policer-&gt;fill_quanta;
	if (policer-&gt;tokens &gt; policer-&gt;burst_size)
		policer-&gt;tokens = policer-&gt;burst_size;
}

void dpa_policer_timer_cb(void)
{
	struct dpa_policer *policer;
	int i;

	for (i = 0; i &lt; DPA_POLICERS; ++i) {
		policer = &amp;policers[i];
		if (policer-&gt;is_active)
			dpa_policer_fill_tokens(policer);
	}
}
</Insert>
</MostRecent>
<Delta Version="0" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:03:38000">
<Copy StartSeek="0" EndSeek="1035"/>
<Insert>#define DPA_FLOW_GRP_POLICERS 	16
#define DPA_PORT_POLICERS 	2

struct dpa_policer flow_policers[DPA_FLOW_GRP_POLICERS];
struct dpa_policer port_policers[DPA_PORT_POLICERS];

</Insert>
<Copy StartSeek="1121" EndSeek="1931"/>
</Delta>
<Delta Version="1" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:06:11000">
<Copy StartSeek="0" EndSeek="1035"/>
<Insert>#define DPA_FLOW_POLICERS 	16
</Insert>
<Copy StartSeek="1065" EndSeek="1931"/>
</Delta>
<Delta Version="2" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:06:20000">
<Copy StartSeek="0" EndSeek="1066"/>
<Insert>struct dpa_policer flow_policers[DPA_FLOW_POLICERS];
</Insert>
<Copy StartSeek="1114" EndSeek="1926"/>
</Delta>
<Delta Version="3" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:06:27000">
<Copy StartSeek="0" EndSeek="1035"/>
<Insert>#define DPA_FLOW_POLICERS 	18
</Insert>
<Copy StartSeek="1059" EndSeek="1060"/>
<Insert>struct dpa_policer policers[DPA_FLOW_POLICERS];
</Insert>
<Copy StartSeek="1103" EndSeek="1915"/>
</Delta>
<Delta Version="4" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:06:43000">
<Copy StartSeek="0" EndSeek="1650"/>
<Insert>	for (i = 0; i &lt; DPA_FLOW_GRP_POLICERS; ++i) {
		policer = &amp;flow_policers[i];
		if (policer-&gt;is_active)
			fill_tokens(policer);
	}

	for (i = 0; i &lt; DPA_PORT_POLICERS; ++i) {
</Insert>
<Copy StartSeek="1688" EndSeek="1773"/>
<Insert>}

</Insert>
<Copy StartSeek="1776" EndSeek="1777"/>
</Delta>
<Delta Version="5" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:07:19000">
<Copy StartSeek="0" EndSeek="1688"/>
<Insert>		policer = &amp;flow_policers[i];
</Insert>
<Copy StartSeek="1714" EndSeek="1773"/>
</Delta>
<Delta Version="6" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:07:28000">
<Copy StartSeek="0" EndSeek="1768"/>
<Copy StartSeek="1771" EndSeek="1772"/>
<Insert>}


</Insert>
</Delta>
<Delta Version="7" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:07:49000">
<Copy StartSeek="0" EndSeek="1007"/>
<Insert>	int	      ais_active;
</Insert>
<Copy StartSeek="1029" EndSeek="1771"/>
</Delta>
<Delta Version="8" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:17:26000">
<Copy StartSeek="0" EndSeek="1365"/>
<Insert>int dpa_policer_init(struct dpa_policer *drl)
{
</Insert>
<Copy StartSeek="1513" EndSeek="1871"/>
</Delta>
<Delta Version="9" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:20:42000">
<Copy StartSeek="0" EndSeek="1104"/>
<Insert>/* HAIM FIXME : come up with a better name ? */
</Insert>
<Copy StartSeek="1127" EndSeek="1488"/>
<Copy StartSeek="1489" EndSeek="1847"/>
</Delta>
<Delta Version="10" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:21:4000">
<Copy StartSeek="0" EndSeek="1340"/>
<Insert>/* rate_limit [kbps], burst_size [kbit], timer_res [1/sec] */
</Insert>
<Copy StartSeek="1404" EndSeek="1849"/>
</Delta>
<Delta Version="11" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:21:37000">
<Copy StartSeek="0" EndSeek="1340"/>
<Copy StartSeek="1496" EndSeek="2005"/>
</Delta>
<Delta Version="12" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:23:40000">
<Copy StartSeek="0" EndSeek="1463"/>
<Insert>		if () {
		}
	}
</Insert>
<Copy StartSeek="1522" EndSeek="2047"/>
</Delta>
<Delta Version="13" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:24:9000">
<Copy StartSeek="0" EndSeek="1688"/>
<Insert>
</Insert>
<Copy StartSeek="1755" EndSeek="2113"/>
</Delta>
<Delta Version="14" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:24:34000">
<Copy StartSeek="0" EndSeek="1385"/>
<Insert>	struct dpa_policer *police = policers;
</Insert>
<Copy StartSeek="1426" EndSeek="1464"/>
<Insert>		if (!police-&gt;is_active)
			return police;
</Insert>
<Copy StartSeek="1510" EndSeek="2116"/>
</Delta>
<Delta Version="15" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:24:40000">
<Copy StartSeek="0" EndSeek="407"/>
<Insert>  unsigned short id;
  unsigned char  port;
  unsigned long  rate_limit;
  unsigned short vid;
  ZTE_NETFF_IP   src_ip;
  ZTE_NETFF_IP   src_ip_mask;
  unsigned short type;
</Insert>
<Copy StartSeek="573" EndSeek="1000"/>
<Insert>	int	      is_active;
</Insert>
<Copy StartSeek="1026" EndSeek="1507"/>
<Insert>		police++;
</Insert>
<Copy StartSeek="1520" EndSeek="1603"/>
<Insert>int dpa_policer_init(unsigned long rate_limit, unsigned long burst_size, timer_res)
</Insert>
<Copy StartSeek="1703" EndSeek="1760"/>
<Insert>	if () {
	}
</Insert>
<Copy StartSeek="1779" EndSeek="2137"/>
</Delta>
<Delta Version="16" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:25:11000">
<Copy StartSeek="0" EndSeek="1187"/>
<Insert>	struct dpa_policer *drl = (struct dpa_policer *)rate_limit;
</Insert>
<Copy StartSeek="1248" EndSeek="1249"/>
<Insert>	if (drl-&gt;tokens &gt;= data_len) {
		drl-&gt;tokens -= data_len;
</Insert>
<Copy StartSeek="1308" EndSeek="2137"/>
</Delta>
<Delta Version="17" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:26:16000">
<Copy StartSeek="0" EndSeek="151"/>
<Insert>	unsigned long rate_limit;
</Insert>
<Copy StartSeek="175" EndSeek="446"/>
<Insert>	unsigned long  rate_limit;
</Insert>
<Copy StartSeek="471" EndSeek="1118"/>
<Insert>int dpa_policer_do(void *rate_limit, unsigned long data_len)
</Insert>
<Copy StartSeek="1176" EndSeek="1178"/>
<Insert>	struct dpa_policer *plc = (struct dpa_policer *)rate_limit;
</Insert>
<Copy StartSeek="1236" EndSeek="1527"/>
<Insert>/* rate_limit [kbit/s], burst_size [kbit], timer_res [1/sec] */
struct dpa_policer *dpa_policer_init(unsigned long rate_limit, unsigned long burst_size, timer_res)
</Insert>
<Copy StartSeek="1685" EndSeek="2119"/>
</Delta>
<Delta Version="18" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:26:30000">
<Copy StartSeek="0" EndSeek="1742"/>
<Insert>	!policer
</Insert>
<Copy StartSeek="1754" EndSeek="2121"/>
</Delta>
<Delta Version="19" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:26:46000">
<Copy StartSeek="0" EndSeek="1742"/>
<Insert>	!(policer)
</Insert>
<Copy StartSeek="1757" EndSeek="2124"/>
</Delta>
<Delta Version="20" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:26:53000">
<Copy StartSeek="0" EndSeek="1757"/>
<Insert>		return
</Insert>
<Copy StartSeek="1772" EndSeek="2130"/>
</Delta>
<Delta Version="21" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:34:7000">
<Copy StartSeek="0" EndSeek="1772"/>
<Insert>	dpa_policer_timer_add(drl);
}

</Insert>
<Copy StartSeek="1808" EndSeek="2134"/>
</Delta>
<Delta Version="22" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:34:29000">
<Copy StartSeek="0" EndSeek="1773"/>
<Insert>	dpa_policer_add_to_timer(drl);
}

</Insert>
<Copy StartSeek="1821" EndSeek="2147"/>
</Delta>
<Delta Version="23" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:34:53000">
<Copy StartSeek="0" EndSeek="1687"/>
<Insert>	struct dpa_policer *policer = get_free_policer(void);
</Insert>
<Copy StartSeek="1738" EndSeek="1803"/>
<Insert>	policer-&gt;
</Insert>
<Copy StartSeek="1816" EndSeek="2145"/>
</Delta>
<Delta Version="24" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:42:0000">
<Copy StartSeek="0" EndSeek="1803"/>
<Insert>	policer-&gt;is
}

</Insert>
<Copy StartSeek="1855" EndSeek="2181"/>
</Delta>
<Delta Version="25" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:44:16000">
<Copy StartSeek="0" EndSeek="1803"/>
<Insert>	policer-&gt;burst_size = 
</Insert>
<Copy StartSeek="1839" EndSeek="2193"/>
</Delta>
<Delta Version="26" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:44:30000">
<Copy StartSeek="0" EndSeek="1838"/>
<Insert>
</Insert>
<Copy StartSeek="1858" EndSeek="2212"/>
</Delta>
<Delta Version="27" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:44:53000">
<Copy StartSeek="0" EndSeek="1588"/>
<Insert>struct dpa_policer *dpa_policer_init(unsigned long policer, unsigned long burst_size, timer_res)
{
</Insert>
<Copy StartSeek="1702" EndSeek="2227"/>
</Delta>
<Delta Version="28" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:46:14000">
<Copy StartSeek="0" EndSeek="1853"/>
<Insert>	policer-&gt;tokens = 
</Insert>
<Copy StartSeek="1869" EndSeek="2223"/>
</Delta>
<Delta Version="29" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:46:20000">
<Copy StartSeek="0" EndSeek="1853"/>
<Insert>	policer-&gt;token
</Insert>
<Copy StartSeek="1873" EndSeek="2227"/>
</Delta>
<Delta Version="30" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:46:25000">
<Copy StartSeek="0" EndSeek="1853"/>
<Insert>	policer-&gt;tokens = 
</Insert>
<Copy StartSeek="1885" EndSeek="2239"/>
</Delta>
<Delta Version="31" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:46:34000">
<Copy StartSeek="0" EndSeek="1853"/>
<Insert>	policer-&gt;tokens = timer_res * 
</Insert>
<Copy StartSeek="1883" EndSeek="2237"/>
</Delta>
<Delta Version="32" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:47:6000">
<Copy StartSeek="0" EndSeek="1853"/>
<Insert>	policer-&gt;tokens = burst_size
</Insert>
<Copy StartSeek="1884" EndSeek="2238"/>
</Delta>
<Delta Version="33" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:47:6000">
<Copy StartSeek="0" EndSeek="1609"/>
<Insert>dpa_policer_init(unsigned long policer, unsigned long burst_size, unsigned long timer_res)
</Insert>
<Copy StartSeek="1697" EndSeek="1881"/>
<Copy StartSeek="1906" EndSeek="2260"/>
</Delta>
<Delta Version="34" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:47:29000">
<Copy StartSeek="0" EndSeek="1527"/>
<Insert>/* policer [kbit/s], burst_size [kbit], timer_res [1/sec] */
</Insert>
<Copy StartSeek="1585" EndSeek="2257"/>
</Delta>
<Delta Version="35" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:47:34000">
<Copy StartSeek="0" EndSeek="1878"/>
<Insert>	policer-&gt;fill_quanta = 
</Insert>
<Copy StartSeek="1922" EndSeek="2276"/>
</Delta>
<Delta Version="36" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:47:55000">
<Copy StartSeek="0" EndSeek="1878"/>
<Insert>	policer-&gt;fill_quanta = 8 * rate/timer_res 
</Insert>
<Copy StartSeek="1922" EndSeek="2276"/>
</Delta>
<Delta Version="37" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:47:57000">
<Copy StartSeek="0" EndSeek="1878"/>
<Insert>	policer-&gt;fill_quanta = 8 * rate/timer_res;
</Insert>
<Copy StartSeek="1924" EndSeek="2278"/>
</Delta>
<Delta Version="38" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:48:20000">
<Copy StartSeek="0" EndSeek="1812"/>
<Insert>	policer-&gt;burst_size = burst_size;
</Insert>
<Copy StartSeek="1812" EndSeek="1889"/>
<Copy StartSeek="1985" EndSeek="2339"/>
</Delta>
<Delta Version="39" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:51:21000">
<Copy StartSeek="0" EndSeek="1889"/>
<Insert>	policer-&gt;burst_size = burst_size  &gt; policer-&gt;fill_quanta ? burst_size:
</Insert>
<Copy StartSeek="1963" EndSeek="2341"/>
</Delta>
<Delta Version="40" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:54:19000">
<Copy StartSeek="0" EndSeek="1889"/>
<Insert>	policer-&gt;burst_size = (burst_size  &gt; policer-&gt;fill_quanta) ? burst_size:
		policer-&gt;fill_quanta;
</Insert>
<Copy StartSeek="1995" EndSeek="2349"/>
</Delta>
<Delta Version="41" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:56:53000">
<Copy StartSeek="0" EndSeek="1967"/>
<Insert>		2 * policer-&gt;fill_quanta;
</Insert>
<Copy StartSeek="1997" EndSeek="2351"/>
</Delta>
<Delta Version="42" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:56:56000">
<Copy StartSeek="0" EndSeek="1967"/>
<Insert>				2 * policer-&gt;fill_quanta;
</Insert>
<Copy StartSeek="1993" EndSeek="2347"/>
</Delta>
<Delta Version="43" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:57:43000">
<Copy StartSeek="0" EndSeek="1889"/>
<Insert>	policer-&gt;burst_size = (burst_size  &gt; 2 * policer-&gt;fill_quanta) ? burst_size:
</Insert>
<Copy StartSeek="1963" EndSeek="2343"/>
</Delta>
<Delta Version="44" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:57:51000">
<Copy StartSeek="0" EndSeek="1889"/>
<Insert>	policer-&gt;burst_size = (burst_size  &gt; policer-&gt;fill_quanta) ? burst_size:
</Insert>
<Copy StartSeek="1962" EndSeek="2342"/>
</Delta>
<Delta Version="45" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="14:59:22000">
<Copy StartSeek="0" EndSeek="2016"/>
<Insert>void fill_tokens(struct dpa_policer *drlt)
</Insert>
<Copy StartSeek="2071" EndSeek="2179"/>
<Insert>void timer_cb(void) 
</Insert>
<Copy StartSeek="2212" EndSeek="2366"/>
</Delta>
<Delta Version="46" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:16:16000">
<Copy StartSeek="0" EndSeek="25"/>
<Copy StartSeek="31" EndSeek="787"/>
<Insert>
</Insert>
<Copy StartSeek="794" EndSeek="2378"/>
</Delta>
<Delta Version="47" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:16:30000">
<Copy StartSeek="0" EndSeek="1790"/>
<Copy StartSeek="1808" EndSeek="2396"/>
</Delta>
<Delta Version="48" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:24:57000">
<Copy StartSeek="0" EndSeek="1790"/>
<Insert>	burst_size /= 8;
</Insert>
<Copy StartSeek="1820" EndSeek="2408"/>
</Delta>
<Delta Version="49" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:25:1000">
<Copy StartSeek="0" EndSeek="898"/>
<Insert>	unsigned long tokens;
	unsigned long burst_size;
	unsigned long fill_quanta; /* added toks at each tick */
	int           is_active;
</Insert>
<Copy StartSeek="1069" EndSeek="2445"/>
</Delta>
<Delta Version="50" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:25:44000">
<Copy StartSeek="0" EndSeek="1826"/>
<Insert>
	burst_size /= 8; /* bytes */
</Insert>
<Copy StartSeek="1881" EndSeek="2469"/>
</Delta>
<Delta Version="51" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:26:10000">
<Copy StartSeek="0" EndSeek="1946"/>
<Insert>	policer-&gt;fill_quanta = rate/(8 * timer_res);
</Insert>
<Copy StartSeek="1986" EndSeek="2463"/>
</Delta>
<Delta Version="52" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:26:18000">
<Copy StartSeek="0" EndSeek="1946"/>
<Insert>	policer-&gt;fill_quanta = rate/timer_res;
</Insert>
<Copy StartSeek="1988" EndSeek="2465"/>
</Delta>
<Delta Version="53" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:26:21000">
<Copy StartSeek="0" EndSeek="1576"/>
<Insert>/* rate [kbit/s], burst_size [kbit], timer_res [1/sec] */
</Insert>
<Copy StartSeek="1678" EndSeek="2509"/>
</Delta>
<Delta Version="54" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:29:21000">
<Copy StartSeek="0" EndSeek="1699"/>
<Insert>dpa_policer_init(unsigned long rate, unsigned long burst_size, unsigned long timer_res)
{
</Insert>
<Copy StartSeek="1793" EndSeek="2513"/>
</Delta>
<Delta Version="55" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:29:38000">
<Copy StartSeek="0" EndSeek="1699"/>
<Insert>dpa_policer_init(unsigned long rate, unsigned long burst_size, 
</Insert>
<Copy StartSeek="1762" EndSeek="2512"/>
</Delta>
<Delta Version="56" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:29:40000">
<Copy StartSeek="0" EndSeek="2511"/>
<Insert>
</Insert>
</Delta>
<Delta Version="57" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:33:9000">
<Copy StartSeek="0" EndSeek="2510"/>
<Insert>
</Insert>
</Delta>
<Delta Version="58" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:33:23000">
<Copy StartSeek="0" EndSeek="1143"/>
<Insert>
</Insert>
<Copy StartSeek="1189" EndSeek="2555"/>
</Delta>
<Delta Version="59" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:35:18000">
<Copy StartSeek="0" EndSeek="1073"/>
<Insert>
#define DPA_POLICERS 18

</Insert>
<Copy StartSeek="1200" EndSeek="2656"/>
</Delta>
<Delta Version="60" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:36:34000">
<Copy StartSeek="0" EndSeek="1134"/>
<Copy StartSeek="1135" EndSeek="2657"/>
</Delta>
<Delta Version="61" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:36:42000">
<Copy StartSeek="0" EndSeek="876"/>
<Insert>
</Insert>
<Copy StartSeek="940" EndSeek="1136"/>
<Insert>#define DPA_FLOW_GRP_POLICERS 16
#define DPA_PORT_POLICERS 2

</Insert>
<Copy StartSeek="1137" EndSeek="2659"/>
</Delta>
<Delta Version="62" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:36:55000">
<Copy StartSeek="0" EndSeek="1136"/>
<Insert>
</Insert>
<Copy StartSeek="1136" EndSeek="1246"/>
<Insert>struct dpa_policer flow_policers[DPA_FLOW_];

</Insert>
<Copy StartSeek="1360" EndSeek="2726"/>
</Delta>
<Delta Version="63" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:37:16000">
<Copy StartSeek="0" EndSeek="1303"/>
<Insert>struct dpa_policer port_policer[DPA_FLOW_GRP_POLICERS];
</Insert>
<Copy StartSeek="1355" EndSeek="2722"/>
</Delta>
<Delta Version="64" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:37:20000">
<Copy StartSeek="0" EndSeek="1439"/>
<Insert>	struct dpa_policer *plc = (struct dpa_policer *)policer;
</Insert>
<Copy StartSeek="1495" EndSeek="1496"/>
<Insert>	if (plc-&gt;tokens &gt;= data_len) {
		plc-&gt;tokens -= data_len;
</Insert>
<Copy StartSeek="1551" EndSeek="2716"/>
</Delta>
<Delta Version="65" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:38:37000">
<Copy StartSeek="0" EndSeek="1246"/>
<Insert>struct dpa_policer flow_policers[DPA_FLOW_GRP_POLICERS];
struct dpa_policer port_policer[DPA_PORT_POLICERS];
</Insert>
<Copy StartSeek="1357" EndSeek="1358"/>
<Copy StartSeek="1360" EndSeek="2720"/>
</Delta>
<Delta Version="66" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:38:51000">
<Copy StartSeek="0" EndSeek="1359"/>
<Insert>
</Insert>
<Copy StartSeek="1427" EndSeek="2787"/>
</Delta>
<Delta Version="67" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:43:58000">
<Copy StartSeek="0" EndSeek="1359"/>
<Insert>int dpa_policer_flow_init()
</Insert>
<Copy StartSeek="1386" EndSeek="1392"/>
<Insert>int dpa_policer_port_init()
</Insert>
<Copy StartSeek="1450" EndSeek="2816"/>
</Delta>
<Delta Version="68" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:49:22000">
<Copy StartSeek="0" EndSeek="1392"/>
<Insert>int dpa_policer_port_add(struct dpa_policer *p, int port)
</Insert>
<Copy StartSeek="1456" EndSeek="2822"/>
</Delta>
<Delta Version="69" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:49:30000">
<Copy StartSeek="0" EndSeek="1458"/>
<Insert>
</Insert>
<Copy StartSeek="1460" EndSeek="2823"/>
</Delta>
<Delta Version="70" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:49:39000">
<Copy StartSeek="0" EndSeek="1458"/>
<Insert>	
}

</Insert>
<Copy StartSeek="1539" EndSeek="2899"/>
</Delta>
<Delta Version="71" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:51:10000">
<Copy StartSeek="0" EndSeek="1535"/>
<Insert>
</Insert>
<Copy StartSeek="1566" EndSeek="2929"/>
</Delta>
<Delta Version="72" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:52:5000">
<Copy StartSeek="0" EndSeek="1566"/>
<Insert>}

</Insert>
<Copy StartSeek="1585" EndSeek="2945"/>
</Delta>
<Delta Version="73" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:52:10000">
<Copy StartSeek="0" EndSeek="1359"/>
<Insert>int dpa_policer_flow_add()
</Insert>
<Copy StartSeek="1426" EndSeek="2985"/>
</Delta>
<Delta Version="74" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:52:31000">
<Copy StartSeek="0" EndSeek="1428"/>
<Insert>
}

</Insert>
<Copy StartSeek="1555" EndSeek="3108"/>
</Delta>
<Delta Version="75" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:53:33000">
<Copy StartSeek="0" EndSeek="1359"/>
<Insert>int dpa_policer_flow_add(struct dpa_policer *policer, int rcqueue)
</Insert>
<Copy StartSeek="1421" EndSeek="1423"/>
<Insert>	if (port &gt;= DPA_PORT_POLICERS || port &lt; 0) {
</Insert>
<Copy StartSeek="1473" EndSeek="3107"/>
</Delta>
<Delta Version="76" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:55:28000">
<Copy StartSeek="0" EndSeek="1504"/>
<Insert>	port_policer[port] = policer;
</Insert>
<Copy StartSeek="1533" EndSeek="3105"/>
</Delta>
<Delta Version="77" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:55:41000">
<Copy StartSeek="0" EndSeek="1504"/>
<Insert>	port_policer[id] = policer;
</Insert>
<Copy StartSeek="1533" EndSeek="3105"/>
</Delta>
<Delta Version="78" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:55:46000">
<Copy StartSeek="0" EndSeek="1423"/>
<Insert>	if (port &gt;= DPA_FLOW_GRP_POLICERS || port &lt; 0) {
</Insert>
<Copy StartSeek="1469" EndSeek="3101"/>
</Delta>
<Delta Version="79" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:55:53000">
<Copy StartSeek="0" EndSeek="1359"/>
<Insert>int dpa_policer_flow_add(struct dpa_policer *policer, int id)
{
	if (id &gt;= DPA_FLOW_GRP_POLICERS || id &lt; 0) {
</Insert>
<Copy StartSeek="1498" EndSeek="1529"/>
<Insert>	flow_policer[id] = policer;
</Insert>
<Copy StartSeek="1567" EndSeek="1779"/>
<Copy StartSeek="1856" EndSeek="3216"/>
</Delta>
<Delta Version="80" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="15:59:55000">
<Copy StartSeek="0" EndSeek="1780"/>
<Insert>int dpa_policer_flow_do(int id, unsigned long data_len)
</Insert>
<Copy StartSeek="1845" EndSeek="3225"/>
</Delta>
<Delta Version="81" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:00:0000">
<Copy StartSeek="0" EndSeek="1847"/>
<Copy StartSeek="2024" EndSeek="3402"/>
</Delta>
<Delta Version="82" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:11:7000">
<Copy StartSeek="0" EndSeek="1937"/>
<Insert>		return DPA_INVALID_PARAM;
</Insert>
<Copy StartSeek="1979" EndSeek="3416"/>
</Delta>
<Delta Version="83" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:11:26000">
<Copy StartSeek="0" EndSeek="1937"/>
<Insert>		return 1; //* passthrough by default */
</Insert>
<Copy StartSeek="1978" EndSeek="3415"/>
</Delta>
<Delta Version="84" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:11:31000">
<Copy StartSeek="0" EndSeek="1877"/>
<Insert>	if (policer_idx &gt;= DPA_PORT_POLICERS || policer_idx &lt; 0) {
</Insert>
<Copy StartSeek="1940" EndSeek="3418"/>
</Delta>
<Delta Version="85" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:11:59000">
<Copy StartSeek="0" EndSeek="1847"/>
<Insert>	struct dpa_policer *policer;
</Insert>
<Copy StartSeek="1847" EndSeek="1951"/>
<Insert>	}

	flow_policer[policer_idx] = policer;
	return DPA_OK;

	void *policer
}

</Insert>
<Copy StartSeek="2012" EndSeek="3372"/>
</Delta>
<Delta Version="86" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:13:9000">
<Copy StartSeek="0" EndSeek="2012"/>
<Copy StartSeek="2237" EndSeek="3597"/>
</Delta>
<Delta Version="87" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:13:27000">
<Copy StartSeek="0" EndSeek="2072"/>
<Insert>	if (policer_idx &gt;= DPA_FLOW_GRP_POLICERS|| policer_idx &lt; 0) {
		return 1; /* passthrough by default */
	}	
</Insert>
<Copy StartSeek="2072" EndSeek="3489"/>
</Delta>
<Delta Version="88" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:17:31000">
<Copy StartSeek="0" EndSeek="1202"/>
<Insert>struct dpa_policer policers[DPA_POLICERS];
</Insert>
<Copy StartSeek="1252" EndSeek="1253"/>
<Insert>struct dpa_policer *flow_policers[DPA_FLOW_GRP_POLICERS];
struct dpa_policer *port_policer[DPA_PORT_POLICERS];
</Insert>
<Copy StartSeek="1378" EndSeek="3510"/>
</Delta>
<Delta Version="89" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:17:41000">
<Copy StartSeek="0" EndSeek="1379"/>
<Insert>


</Insert>
<Copy StartSeek="1379" EndSeek="3507"/>
</Delta>
<Delta Version="90" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:18:27000">
<Copy StartSeek="0" EndSeek="1379"/>
<Copy StartSeek="1380" EndSeek="3508"/>
</Delta>
<Delta Version="91" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:18:27000">
<Copy StartSeek="0" EndSeek="1798"/>
<Insert>
</Insert>
<Copy StartSeek="1798" EndSeek="3507"/>
</Delta>
<Delta Version="92" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:18:48000">
<Copy StartSeek="0" EndSeek="1798"/>
<Copy StartSeek="1807" EndSeek="3516"/>
</Delta>
<Delta Version="93" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:19:0000">
<Copy StartSeek="0" EndSeek="1798"/>
<Insert>/* do */
</Insert>
<Copy StartSeek="1798" EndSeek="3507"/>
</Delta>
<Delta Version="94" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:19:11000">
<Copy StartSeek="0" EndSeek="1380"/>
<Insert>int dpa_policer_flow_add(struct dpa_policer *policer, int policer_idx)
</Insert>
<Copy StartSeek="1437" EndSeek="1439"/>
<Copy StartSeek="1496" EndSeek="3550"/>
</Delta>
<Delta Version="95" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:22:13000">
<Copy StartSeek="0" EndSeek="1591"/>
<Insert>	flow_policer[policer_idx] = policer;
</Insert>
<Copy StartSeek="1623" EndSeek="3544"/>
</Delta>
<Delta Version="96" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:22:21000">
<Copy StartSeek="0" EndSeek="1642"/>
<Insert>int dpa_policer_port_add(struct dpa_policer *policer, int port)
</Insert>
<Copy StartSeek="1692" EndSeek="1694"/>
<Copy StartSeek="1751" EndSeek="3587"/>
</Delta>
<Delta Version="97" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:22:34000">
<Copy StartSeek="0" EndSeek="1828"/>
<Insert>	port_policer[port] = policer;
</Insert>
<Copy StartSeek="1853" EndSeek="3581"/>
</Delta>
<Delta Version="98" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:22:37000">
<Copy StartSeek="0" EndSeek="2361"/>
<Copy StartSeek="2416" EndSeek="3636"/>
</Delta>
<Delta Version="99" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:23:35000">
<Copy StartSeek="0" EndSeek="2804"/>
<Copy StartSeek="2928" EndSeek="3760"/>
</Delta>
<Delta Version="100" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:34:3000">
<Copy StartSeek="0" EndSeek="2927"/>
<Insert>
struct dpa_policer *
dpa_policer_init(unsigned long rate, unsigned long burst_size,
		 unsigned long timer_res)
{
	struct dpa_policer *policer = get_free_policer();
	if (!policer)
		return NULL;
</Insert>
<Copy StartSeek="2929" EndSeek="3190"/>
<Copy StartSeek="3390" EndSeek="3766"/>
</Delta>
<Delta Version="101" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:34:25000">
<Copy StartSeek="0" EndSeek="3415"/>
<Insert>}

</Insert>
<Copy StartSeek="3435" EndSeek="3783"/>
</Delta>
<Delta Version="102" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:34:43000">
<Copy StartSeek="0" EndSeek="3216"/>
<Insert>dpa_policer_init(unsigned long rate, unsigned long burst_size,
		 unsigned long timer_res)
{
</Insert>
<Copy StartSeek="3242" EndSeek="3716"/>
</Delta>
<Delta Version="103" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:35:22000">
<Copy StartSeek="0" EndSeek="3195"/>
<Insert>struct dpa_policer *
</Insert>
<Copy StartSeek="3202" EndSeek="3702"/>
</Delta>
<Delta Version="104" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:35:45000">
<Copy StartSeek="0" EndSeek="3195"/>
<Insert>void *
dpa_policer_alloc(void)
{
</Insert>
<Copy StartSeek="3228" EndSeek="3702"/>
</Delta>
<Delta Version="105" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:35:47000">
<Copy StartSeek="0" EndSeek="2804"/>
<Insert>void
dpa_policer_cfg(struct dpa_policer *policer, unsigned long rate,
</Insert>
<Copy StartSeek="2874" EndSeek="3195"/>
<Insert>void * dpa_policer_alloc(void)
</Insert>
<Copy StartSeek="3225" EndSeek="3701"/>
</Delta>
<Delta Version="106" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:36:2000">
<Copy StartSeek="0" EndSeek="1380"/>
<Copy StartSeek="1431" EndSeek="2753"/>
<Copy StartSeek="2754" EndSeek="3753"/>
</Delta>
<Delta Version="107" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:37:17000">
<Copy StartSeek="0" EndSeek="1426"/>
<Insert>	
}

</Insert>
<Copy StartSeek="1546" EndSeek="3868"/>
</Delta>
<Delta Version="108" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:39:1000">
<Copy StartSeek="0" EndSeek="1546"/>
<Copy StartSeek="1681" EndSeek="4003"/>
</Delta>
<Delta Version="109" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:39:32000">
<Copy StartSeek="0" EndSeek="2405"/>
<Insert>int dpa_policer_flow_do(int port, unsigned long data_len)
</Insert>
<Copy StartSeek="2463" EndSeek="4003"/>
</Delta>
<Delta Version="110" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="16:53:9000">
<Copy StartSeek="0" EndSeek="25"/>
<Insert>#if 0
/* HAIM FIXME : API to implement in our own functions */
typedef struct zte_l3_hardfast_rcqueue_cfg {
	unsigned char rcqueue;
	unsigned long policer;
} ZTE_L3_HARDFAST_RCQUEUE_CFG;

int zte_api_fast_l3_set_rcqueue_cfg(ZTE_L3_HARDFAST_RCQUEUE_CFG *cfg);
int zte_api_fast_l3_get_rcqueue_cfg(ZTE_L3_HARDFAST_RCQUEUE_CFG *cfg);


typedef struct zte_l3_hardfast_ingress_policer_cfg {
	unsigned short id;
	unsigned char  port;
	unsigned long  policer;
	unsigned short vid;
	ZTE_NETFF_IP   src_ip;
	ZTE_NETFF_IP   src_ip_mask;
	unsigned short type;
} ZTE_L3_HARDFAST_INGRESS_POLICER_CFG;

int zte_api_fast_l3_set_ingress_policer_cfg(ZTE_L3_HARDFAST_INGRESS_POLICER_CFG *cfg);
int zte_api_fast_l3_get_ingress_policer_cfg(ZTE_L3_HARDFAST_INGRESS_POLICER_CFG *cfg);
#endif
/*******************************************************************************/
</Insert>
<Copy StartSeek="25" EndSeek="3152"/>
</Delta>
<Delta Version="111" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:42:9000">
<Copy StartSeek="0" EndSeek="25"/>
<Insert>#define DPA_FLOW_GRP_POLICERS 	16
#define DPA_PORT_POLICERS 	2

</Insert>
<Copy StartSeek="26" EndSeek="2741"/>
<Insert>void dpa_policer_fill_tokens(struct dpa_policer *drlt)
</Insert>
<Copy StartSeek="2803" EndSeek="2911"/>
<Insert>void dpa_policer_timer_cb(void) 
</Insert>
<Copy StartSeek="2943" EndSeek="3095"/>
</Delta>
<Delta Version="112" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:44:11000">
<Copy StartSeek="0" EndSeek="2192"/>
<Insert>void dpa_policer_cfg(struct dpa_policer *policer, unsigned long rate,
</Insert>
<Copy StartSeek="2235" EndSeek="2290"/>
<Copy StartSeek="2347" EndSeek="3125"/>
</Delta>
<Delta Version="113" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:46:59000">
<Copy StartSeek="0" EndSeek="2192"/>
<Insert>void dpa_policer_cfg(, unsigned long rate,
</Insert>
<Copy StartSeek="2248" EndSeek="3138"/>
</Delta>
<Delta Version="114" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:47:5000">
<Copy StartSeek="0" EndSeek="2449"/>
<Insert>	policer-&gt;tokens = burst_size;
	policer-&gt;fill_quanta = rate / timer_res;
	policer-&gt;burst_size = (burst_size &gt; policer-&gt;fill_quanta) ? burst_size:
				policer-&gt;fill_quanta;
</Insert>
<Copy StartSeek="2591" EndSeek="3108"/>
</Delta>
<Delta Version="115" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:47:19000">
<Copy StartSeek="0" EndSeek="2192"/>
<Insert>void dpa_policer_cfg(void *policer, unsigned long rate,
</Insert>
<Copy StartSeek="2247" EndSeek="2302"/>
<Copy StartSeek="2351" EndSeek="3156"/>
</Delta>
<Delta Version="116" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:49:49000">
<Copy StartSeek="0" EndSeek="2302"/>
<Insert>	if ((!policer) {
</Insert>
<Copy StartSeek="2319" EndSeek="2638"/>
<Insert>	
}

</Insert>
<Copy StartSeek="2658" EndSeek="3170"/>
</Delta>
<Delta Version="117" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:50:0000">
<Copy StartSeek="0" EndSeek="2557"/>
<Insert>	p-&gt;burst_size = (burst_size &gt; p-&gt;fill_quanta) ? burst_size:
				p-&gt;fill_quanta;
</Insert>
<Copy StartSeek="2636" EndSeek="3168"/>
</Delta>
<Delta Version="118" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:50:17000">
<Copy StartSeek="0" EndSeek="2606"/>
<Insert>		 burst_size:p-&gt;fill_quanta;
</Insert>
<Copy StartSeek="2638" EndSeek="3170"/>
</Delta>
<Delta Version="119" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:50:21000">
<Copy StartSeek="0" EndSeek="24"/>
<Insert>
</Insert>
<Copy StartSeek="49" EndSeek="3194"/>
</Delta>
<Delta Version="120" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:52:29000">
<Copy StartSeek="0" EndSeek="618"/>
<Insert>	return flow_policer[policer_idx];
</Insert>
<Copy StartSeek="654" EndSeek="760"/>
<Insert>	return flow_policer[port];
</Insert>
<Copy StartSeek="789" EndSeek="1004"/>
<Insert>	flow_policer[policer_idx] = p;
</Insert>
<Copy StartSeek="1037" EndSeek="1461"/>
<Insert>	dpa_policer_do(flow_policer[policer_idx], data_len);
</Insert>
<Copy StartSeek="1516" EndSeek="1579"/>
<Insert>	dpa_policer_do(flow_policer[policer_idx], data_len);
</Insert>
<Copy StartSeek="1634" EndSeek="3199"/>
</Delta>
<Delta Version="121" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:52:58000">
<Copy StartSeek="0" EndSeek="428"/>
<Insert>static struct dpa_policer *port_policer[DPA_PORT_POLICERS];
</Insert>
<Copy StartSeek="489" EndSeek="1243"/>
<Insert>	port_policer[port] = p;
</Insert>
<Copy StartSeek="1269" EndSeek="3201"/>
</Delta>
<Delta Version="122" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:53:6000">
<Copy StartSeek="0" EndSeek="1581"/>
<Insert>	dpa_policer_do(flow_policers[policer_idx], data_len);
</Insert>
<Copy StartSeek="1629" EndSeek="3194"/>
</Delta>
<Delta Version="123" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:53:24000">
<Copy StartSeek="0" EndSeek="1581"/>
<Insert>	dpa_policer_do(flow_policers[port], data_len);
</Insert>
<Copy StartSeek="1629" EndSeek="3194"/>
</Delta>
<Delta Version="124" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:53:32000">
<Copy StartSeek="0" EndSeek="1581"/>
<Insert>	dpa_policer_do(port_policers[port], data_len);
</Insert>
<Copy StartSeek="1636" EndSeek="3201"/>
</Delta>
<Delta Version="125" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:53:40000">
<Copy StartSeek="0" EndSeek="1463"/>
<Insert>	dpa_policer_do(flow_policers[policer_idx], data_len);
</Insert>
<Copy StartSeek="1525" EndSeek="3208"/>
</Delta>
<Delta Version="126" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:53:47000">
<Copy StartSeek="0" EndSeek="1970"/>
<Copy StartSeek="1978" EndSeek="2019"/>
<Copy StartSeek="2020" EndSeek="3217"/>
</Delta>
<Delta Version="127" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:54:1000">
<Copy StartSeek="0" EndSeek="1925"/>
<Insert>static dpa_policer *get_free_policer(void)
</Insert>
<Copy StartSeek="1975" EndSeek="3224"/>
</Delta>
<Delta Version="128" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:54:13000">
<Copy StartSeek="0" EndSeek="2934"/>
<Insert>	drl-&gt;tokens += drl-&gt;fill_quanta;
</Insert>
<Copy StartSeek="2969" EndSeek="3225"/>
</Delta>
<Delta Version="129" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:54:23000">
<Copy StartSeek="0" EndSeek="2870"/>
<Insert>static void dpa_policer_fill_tokens(struct dpa_policer *drlt)
</Insert>
<Copy StartSeek="2935" EndSeek="2937"/>
<Insert>	drl-&gt;tokens += drlt-&gt;fill_quanta;
</Insert>
<Copy StartSeek="2975" EndSeek="3231"/>
</Delta>
<Delta Version="130" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:54:39000">
<Copy StartSeek="0" EndSeek="2516"/>
<Insert>	//dpa_policer_add_to_timer(drl);
</Insert>
<Copy StartSeek="2554" EndSeek="2941"/>
<Insert>	drl-&gt;tokens += policer-&gt;fill_quanta;
	if (drl-&gt;tokens &gt; drl-&gt;burst_size)
		drl-&gt;tokens = drl-&gt;burst_size;
</Insert>
<Copy StartSeek="3068" EndSeek="3255"/>
</Delta>
<Delta Version="131" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:54:52000">
<Copy StartSeek="0" EndSeek="3135"/>
<Copy StartSeek="3144" EndSeek="3264"/>
</Delta>
<Delta Version="132" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:55:4000">
<Copy StartSeek="0" EndSeek="3234"/>
<Insert>			fill_tokens(policer);
</Insert>
<Copy StartSeek="3271" EndSeek="3276"/>
</Delta>
<Delta Version="133" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:55:20000">
<Copy StartSeek="0" EndSeek="2485"/>
<Insert>	burst_size /= 8; 
	rate /= 8;
</Insert>
<Copy StartSeek="2546" EndSeek="3306"/>
</Delta>
<Delta Version="134" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:59:3000">
<Copy StartSeek="0" EndSeek="2522"/>
<Insert>	rate = rate * 1024 / 8
</Insert>
<Copy StartSeek="2547" EndSeek="3307"/>
</Delta>
<Delta Version="135" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:59:6000">
<Copy StartSeek="0" EndSeek="2547"/>
<Copy StartSeek="2548" EndSeek="3308"/>
</Delta>
<Delta Version="136" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="17:59:31000">
<Copy StartSeek="0" EndSeek="2485"/>
<Insert>	burst_size = burst_size * 1024 / 8;
</Insert>
<Copy StartSeek="2522" EndSeek="3308"/>
</Delta>
<Delta Version="137" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="18:00:26000">
<Copy StartSeek="0" EndSeek="2522"/>
<Insert>	rate = rate * 1024 / 8;
</Insert>
<Copy StartSeek="2547" EndSeek="3308"/>
</Delta>
<Delta Version="138" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="18:00:32000">
<Copy StartSeek="0" EndSeek="2485"/>
<Insert>	burst_size = burst_size * 1000 / 8;
	rate = rate * 1000 / 8;
</Insert>
<Copy StartSeek="2551" EndSeek="3312"/>
</Delta>
<Delta Version="139" Comment="" NL="\10" Encoding="text" Date="2013/06/24" Time="18:08:11000">
<Copy StartSeek="0" EndSeek="3107"/>
<Copy StartSeek="3143" EndSeek="3348"/>
</Delta>
<Delta Version="140" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:38:8000">
<Copy StartSeek="0" EndSeek="3107"/>
<Insert>/* callback for tokens refilling */
</Insert>
<Copy StartSeek="3142" EndSeek="3347"/>
</Delta>
<Delta Version="141" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:38:13000">
<Copy StartSeek="0" EndSeek="50"/>
<Copy StartSeek="208" EndSeek="3505"/>
</Delta>
<Delta Version="142" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:39:2000">
<Copy StartSeek="0" EndSeek="91"/>
<Insert>#define DPA_FRWD_DBG(format, args...) printk(format"\n", ##args)
</Insert>
<Copy StartSeek="158" EndSeek="3507"/>
</Delta>
<Delta Version="143" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:39:7000">
<Copy StartSeek="0" EndSeek="3439"/>
<Insert>		if (policer-&gt;is_active)
</Insert>
<Copy StartSeek="3467" EndSeek="3504"/>
<Insert>	}
}
</Insert>
</Delta>
<Delta Version="144" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:41:8000">
<Copy StartSeek="0" EndSeek="3504"/>
<Insert>			DPA_POLICE_DBG("police %u, toks %lu\n", i,
</Insert>
<Copy StartSeek="3634" EndSeek="3671"/>
</Delta>
<Delta Version="145" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:41:55000">
<Copy StartSeek="0" EndSeek="3504"/>
<Insert>			DPA_POLICE_DBG("police %u, fq %lu, burst %lu, toks %lu\n", i,
</Insert>
<Copy StartSeek="3580" EndSeek="3682"/>
</Delta>
<Delta Version="146" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:42:2000">
<Copy StartSeek="0" EndSeek="3645"/>
<Insert>				       policer-&gt;tokens)
</Insert>
<Copy StartSeek="3674" EndSeek="3683"/>
</Delta>
<Delta Version="147" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:42:19000">
<Copy StartSeek="0" EndSeek="3504"/>
<Insert>			DPA_POLICE_DBG("police %u, fq %lu, burst %lu, toks %lu\n",
</Insert>
<Copy StartSeek="3569" EndSeek="3648"/>
<Insert>				       policer-&gt;tokens);
</Insert>
<Copy StartSeek="3680" EndSeek="3689"/>
</Delta>
<Delta Version="148" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:45:52000">
<Copy StartSeek="0" EndSeek="1806"/>
<Insert>/* data_len [bytes] */
</Insert>
<Copy StartSeek="1898" EndSeek="2026"/>
<Insert>		return 1; /* passthrough by default */
</Insert>
<Copy StartSeek="2079" EndSeek="2137"/>
<Insert>		return 1;
</Insert>
<Copy StartSeek="2161" EndSeek="3782"/>
</Delta>
<Delta Version="149" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:48:51000">
<Copy StartSeek="0" EndSeek="2164"/>
<Insert>	return 0;
</Insert>
<Copy StartSeek="2189" EndSeek="3796"/>
</Delta>
<Delta Version="150" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:49:14000">
<Copy StartSeek="0" EndSeek="2164"/>
<Copy StartSeek="2184" EndSeek="3631"/>
<Insert>			/* DPA_POLICE_DBG("police %u, fq %lu, burst %lu, toks %lu\n",
				       i,
				       policer-&gt;fill_quanta,
				       policer-&gt;burst_size,
				       policer-&gt;tokens); */
		}
	}
}
</Insert>
</Delta>
<Delta Version="151" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:52:28000">
<Copy StartSeek="0" EndSeek="649"/>
<Insert>
</Insert>
<Copy StartSeek="708" EndSeek="3702"/>
<Insert>void dpa_policer_dump(struct dpa_policer *policer)
</Insert>
<Copy StartSeek="3760" EndSeek="3901"/>
<Insert>		       policer-&gt;tokens); */
</Insert>
<Copy StartSeek="3928" EndSeek="3931"/>
</Delta>
<Delta Version="152" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:52:46000">
<Copy StartSeek="0" EndSeek="2222"/>
<Insert>	DPA_POLICE_DBG("")
</Insert>
<Copy StartSeek="2250" EndSeek="3939"/>
</Delta>
<Delta Version="153" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:53:3000">
<Copy StartSeek="0" EndSeek="2222"/>
<Copy StartSeek="2223" EndSeek="3698"/>
<Insert>		
</Insert>
<Copy StartSeek="3728" EndSeek="3967"/>
</Delta>
<Delta Version="154" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:53:28000">
<Copy StartSeek="0" EndSeek="2222"/>
<Insert>
</Insert>
<Copy StartSeek="2250" EndSeek="3994"/>
</Delta>
<Delta Version="155" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:54:30000">
<Copy StartSeek="0" EndSeek="2222"/>
<Insert>	DPA_POLICE_DBG("len %lu");
</Insert>
<Copy StartSeek="2259" EndSeek="4003"/>
</Delta>
<Delta Version="156" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:54:37000">
<Copy StartSeek="0" EndSeek="2222"/>
<Insert>	DPA_POLICE_DBG("len %lu",data_len);
</Insert>
<Copy StartSeek="2260" EndSeek="4004"/>
</Delta>
<Delta Version="157" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:54:38000">
<Copy StartSeek="0" EndSeek="3735"/>
<Insert>			dpa_policer_dump(policer);
</Insert>
<Copy StartSeek="3767" EndSeek="4006"/>
</Delta>
<Delta Version="158" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="11:55:42000">
<Copy StartSeek="0" EndSeek="1636"/>
<Insert>		return 1; /* passthrough by default */
</Insert>
<Copy StartSeek="1689" EndSeek="4018"/>
</Delta>
<Delta Version="159" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="15:31:58000">
<Copy StartSeek="0" EndSeek="50"/>
<Insert>#if 1
</Insert>
<Copy StartSeek="71" EndSeek="4033"/>
</Delta>
<Delta Version="160" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="15:39:31000">
<Copy StartSeek="0" EndSeek="179"/>
<Insert>#define DPA_FRWD_DBG(format, args...)
</Insert>
<Copy StartSeek="219" EndSeek="4035"/>
</Delta>
<Delta Version="161" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="15:39:37000">
<Copy StartSeek="0" EndSeek="3926"/>
<Insert>		       policer,
		       policer-&gt;fill_quanta,
		       policer-&gt;burst_size,
</Insert>
<Copy StartSeek="3987" EndSeek="4017"/>
</Delta>
<Delta Version="162" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="15:39:54000">
<Copy StartSeek="0" EndSeek="3255"/>
<Copy StartSeek="3256" EndSeek="4018"/>
</Delta>
<Delta Version="163" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="15:40:24000">
<Copy StartSeek="0" EndSeek="2776"/>
<Insert>	if (!policer) {
</Insert>
<Copy StartSeek="2791" EndSeek="2819"/>
<Insert>	}
</Insert>
<Copy StartSeek="2820" EndSeek="4014"/>
</Delta>
<Delta Version="164" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="15:40:34000">
<Copy StartSeek="0" EndSeek="2776"/>
<Insert>	if (!policer)
		return DPA_INVALID_PARAM;

</Insert>
<Copy StartSeek="2776" EndSeek="2833"/>
<Copy StartSeek="2872" EndSeek="4009"/>
</Delta>
<Delta Version="165" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="15:41:34000">
<Copy StartSeek="0" EndSeek="2833"/>
<Copy StartSeek="2834" EndSeek="4010"/>
</Delta>
<Delta Version="166" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="15:41:42000">
<Copy StartSeek="0" EndSeek="2251"/>
<Insert>	DPA_POLICE_DBG("len %lu", data_len);
</Insert>
<Copy StartSeek="2291" EndSeek="4012"/>
</Delta>
<Delta Version="167" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:13:15000">
<Copy StartSeek="0" EndSeek="2251"/>
<Insert>	//DPA_POLICE_DBG("len %lu", data_len);
</Insert>
<Copy StartSeek="2289" EndSeek="3757"/>
<Insert>			//dpa_policer_dump(policer);
</Insert>
<Copy StartSeek="3787" EndSeek="4008"/>
</Delta>
<Delta Version="168" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:13:23000">
<Copy StartSeek="0" EndSeek="2251"/>
<Insert>	DPA_POLICE_DBG("len %lu", data_len);
</Insert>
<Copy StartSeek="2301" EndSeek="4020"/>
</Delta>
<Delta Version="169" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:13:32000">
<Copy StartSeek="0" EndSeek="50"/>
<Insert>#ifdef __DPA_DEBUG__
</Insert>
<Copy StartSeek="59" EndSeek="4008"/>
</Delta>
<Delta Version="170" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:17:53000">
<Copy StartSeek="0" EndSeek="50"/>
<Insert>#ifdef 1
</Insert>
<Copy StartSeek="79" EndSeek="4028"/>
</Delta>
<Delta Version="171" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:18:4000">
<Copy StartSeek="0" EndSeek="3777"/>
<Insert>			dpa_policer_dump(policer);
</Insert>
<Copy StartSeek="3813" EndSeek="4034"/>
</Delta>
<Delta Version="172" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:25:3000">
<Copy StartSeek="0" EndSeek="73"/>
<Insert>#if 1
</Insert>
<Copy StartSeek="81" EndSeek="4036"/>
</Delta>
<Delta Version="173" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:29:56000">
<Copy StartSeek="0" EndSeek="50"/>
<Insert>//#ifdef __DPA_DEBUG__
</Insert>
<Copy StartSeek="71" EndSeek="4034"/>
</Delta>
<Delta Version="174" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:30:6000">
<Copy StartSeek="0" EndSeek="2232"/>
<Copy StartSeek="2283" EndSeek="4085"/>
</Delta>
<Delta Version="175" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:48:52000">
<Copy StartSeek="0" EndSeek="2232"/>
<Insert>		DPA_POLICE_DBG("policer_do: len %lu", data_len);
</Insert>
<Copy StartSeek="2288" EndSeek="2315"/>
<Insert>	DPA_POLICE_DBG("policer_do: len %lu", data_len);
</Insert>
<Copy StartSeek="2372" EndSeek="4097"/>
</Delta>
<Delta Version="176" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:49:7000">
<Copy StartSeek="0" EndSeek="3195"/>
<Insert>		 burst_size : p-&gt;fill_quanta;
</Insert>
<Copy StartSeek="3233" EndSeek="4103"/>
</Delta>
<Delta Version="177" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:51:10000">
<Copy StartSeek="0" EndSeek="3195"/>
<Insert>		 burst_size : (2 * p-&gt;fill_quanta);
</Insert>
<Copy StartSeek="3228" EndSeek="4098"/>
</Delta>
<Delta Version="178" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:54:52000">
<Copy StartSeek="0" EndSeek="3195"/>
<Insert>		 burst_size : p-&gt;fill_quanta);
</Insert>
<Copy StartSeek="3227" EndSeek="4097"/>
</Delta>
<Delta Version="179" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:54:52000">
<Copy StartSeek="0" EndSeek="734"/>
<Copy StartSeek="945" EndSeek="4097"/>
<Insert>static void dpa_policer_dump(struct dpa_policer *policer)
{
	DPA_POLICE_DBG("police %p, fq %lu, burst %lu, toks %lu\n",
		       policer, policer-&gt;fill_quanta, policer-&gt;burst_size,
		       policer-&gt;tokens);
}

</Insert>
</Delta>
<Delta Version="180" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:58:15000">
<Copy StartSeek="0" EndSeek="674"/>
<Insert>static void dpa_policer_dump(struct dpa_policer *policer);

</Insert>
<Copy StartSeek="675" EndSeek="4038"/>
</Delta>
<Delta Version="181" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="16:58:17000">
<Copy StartSeek="0" EndSeek="50"/>
<Insert>#ifdef __DPA_DEBUG__
//#if 1
int printk(const char * fmt, ...);
#define DPA_POLICE_DBG(format, args...) printk(format"\n", ##args)
#else
#define DPA_POLICE_DBG(format, args...)
#endif

</Insert>
<Copy StartSeek="50" EndSeek="490"/>
<Insert>static void dpa_policer_dump(struct dpa_policer *policer)
{
	DPA_POLICE_DBG("police %p, fq %lu, burst %lu, toks %lu\n",
		       policer, policer-&gt;fill_quanta, policer-&gt;burst_size,
		       policer-&gt;tokens);
}

</Insert>
<Copy StartSeek="491" EndSeek="1418"/>
<Insert>		return DPA_POLICE_OK; /* passthrough by default */
</Insert>
<Copy StartSeek="1459" EndSeek="1646"/>
<Insert>/* actual police decision is taken here.
   input: policer and data_len [bytes], output  */
</Insert>
<Copy StartSeek="1669" EndSeek="1908"/>
<Insert>		DPA_POLICE_DBG("policer_do: len %lu [ok]", data_len);
</Insert>
<Copy StartSeek="1908" EndSeek="1935"/>
<Insert>	DPA_POLICE_DBG("policer_do: len %lu [drop]", data_len);
	dpa_policer_dump(policer);
</Insert>
<Copy StartSeek="1935" EndSeek="2394"/>
<Insert>	struct dpa_policer *p = (struct dpa_policer *) policer;

	if (!p)
</Insert>
<Copy StartSeek="2411" EndSeek="2439"/>
<Insert>	
</Insert>
<Copy StartSeek="2499" EndSeek="2873"/>
<Insert>
</Insert>
<Copy StartSeek="2873" EndSeek="3145"/>
<Insert>/* callback for token refilling */
</Insert>
<Copy StartSeek="3145" EndSeek="3282"/>
<Insert>		if (policer-&gt;is_active) {
</Insert>
<Copy StartSeek="3308" EndSeek="3345"/>
<Insert>			/* dpa_policer_dump(policer); */
		}
	}
}

</Insert>
</Delta>
<Delta Version="182" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="22:36:38000">
<Copy StartSeek="0" EndSeek="1418"/>
<Insert>		return 1; /* passthrough by default */
</Insert>
<Copy StartSeek="1471" EndSeek="3362"/>
</Delta>
<Delta Version="183" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="22:37:14000">
<Copy StartSeek="0" EndSeek="50"/>
<Copy StartSeek="227" EndSeek="667"/>
<Insert>
</Insert>
<Copy StartSeek="731" EndSeek="3602"/>
</Delta>
<Delta Version="184" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="22:44:30000">
<Copy StartSeek="0" EndSeek="727"/>
<Insert>
}

</Insert>
<Copy StartSeek="912" EndSeek="3783"/>
</Delta>
<Delta Version="185" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="22:46:28000">
<Copy StartSeek="0" EndSeek="3204"/>
<Copy StartSeek="3232" EndSeek="3811"/>
</Delta>
<Delta Version="186" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="22:47:39000">
<Copy StartSeek="0" EndSeek="2827"/>
<Insert>	if (!policer) {
		return DPA_INVALID_PARAM;
	}
</Insert>
<Copy StartSeek="2827" EndSeek="2884"/>
<Copy StartSeek="2928" EndSeek="3807"/>
</Delta>
<Delta Version="187" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="22:47:48000">
<Copy StartSeek="0" EndSeek="2884"/>
<Copy StartSeek="2885" EndSeek="3808"/>
</Delta>
<Delta Version="188" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="22:47:50000">
<Copy StartSeek="0" EndSeek="2885"/>
<Insert>	if (!p) {
</Insert>
<Copy StartSeek="2894" EndSeek="2922"/>
<Insert>	}
	
</Insert>
<Copy StartSeek="2924" EndSeek="3803"/>
</Delta>
<Delta Version="189" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="22:47:53000">
<Copy StartSeek="0" EndSeek="2885"/>
<Insert>	if (!p)
</Insert>
<Copy StartSeek="2896" EndSeek="2924"/>
<Insert>	
</Insert>
<Copy StartSeek="2929" EndSeek="3808"/>
</Delta>
<Delta Version="190" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="22:48:5000">
<Copy StartSeek="0" EndSeek="2885"/>
<Insert>	if (!p) {
</Insert>
<Copy StartSeek="2894" EndSeek="2922"/>
<Insert>	}
	
</Insert>
<Copy StartSeek="2924" EndSeek="3803"/>
</Delta>
<Delta Version="191" Comment="" NL="\10" Encoding="text" Date="2013/06/25" Time="22:48:10000">
<Copy StartSeek="0" EndSeek="50"/>
<Insert>#ifdef __DPA_DEBUG__
</Insert>
<Copy StartSeek="79" EndSeek="3811"/>
</Delta>
<Delta Version="192" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="10:55:57000">
<Copy StartSeek="0" EndSeek="2294"/>
<Copy StartSeek="2336" EndSeek="3853"/>
</Delta>
<Delta Version="193" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:00:14000">
<Copy StartSeek="0" EndSeek="848"/>
<Insert>		       policer-&gt;fill_quanta, policer-&gt;is_active, policer-&gt;tokens);
}

</Insert>
<Copy StartSeek="940" EndSeek="3873"/>
</Delta>
<Delta Version="194" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:04:56000">
<Copy StartSeek="0" EndSeek="3057"/>
<Copy StartSeek="3136" EndSeek="3263"/>
<Insert>	p-&gt;burst_size = (burst_size &gt; p-&gt;fill_quanta) ?
		 burst_size : p-&gt;fill_quanta;

</Insert>
<Copy StartSeek="3293" EndSeek="3900"/>
</Delta>
<Delta Version="195" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:06:28000">
<Copy StartSeek="0" EndSeek="3163"/>
<Insert>
	//dpa_policer_add_to_timer(policer);
</Insert>
<Copy StartSeek="3163" EndSeek="3861"/>
</Delta>
<Delta Version="196" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:06:33000">
<Copy StartSeek="0" EndSeek="2994"/>
<Copy StartSeek="3058" EndSeek="3200"/>
<Insert>	rate = rate * (1000 / 8);
	p-&gt;tokens = burst_size;
	p-&gt;fill_quanta = rate / timer_res;
</Insert>
<Copy StartSeek="3200" EndSeek="3229"/>
<Insert>
</Insert>
<Copy StartSeek="3255" EndSeek="3862"/>
</Delta>
<Delta Version="197" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:07:9000">
<Copy StartSeek="0" EndSeek="50"/>
<Insert>//#ifdef __DPA_DEBUG__
#if 1
</Insert>
<Copy StartSeek="94" EndSeek="3877"/>
</Delta>
<Delta Version="198" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:19:36000">
<Copy StartSeek="0" EndSeek="2969"/>
<Insert>
</Insert>
<Copy StartSeek="3004" EndSeek="3911"/>
</Delta>
<Delta Version="199" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:35:20000">
<Copy StartSeek="0" EndSeek="2700"/>
<Copy StartSeek="2701" EndSeek="3005"/>
<Copy StartSeek="3006" EndSeek="3109"/>
<Copy StartSeek="3251" EndSeek="4055"/>
</Delta>
<Delta Version="200" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:40:0000">
<Copy StartSeek="0" EndSeek="50"/>
<Insert>//#define__DPA_DEBUG__
</Insert>
<Copy StartSeek="71" EndSeek="4053"/>
</Delta>
<Delta Version="201" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:44:8000">
<Copy StartSeek="0" EndSeek="2327"/>
<Insert>	DPA_POLICE_DBG("data_len %lu",data_len);
</Insert>
<Copy StartSeek="2376" EndSeek="4060"/>
</Delta>
<Delta Version="202" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:44:26000">
<Copy StartSeek="0" EndSeek="71"/>
<Copy StartSeek="72" EndSeek="4061"/>
</Delta>
<Delta Version="203" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:44:57000">
<Copy StartSeek="0" EndSeek="50"/>
<Insert>#define__DPA_DEBUG__
</Insert>
<Copy StartSeek="72" EndSeek="4062"/>
</Delta>
<Delta Version="204" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:45:12000">
<Copy StartSeek="0" EndSeek="3321"/>
<Insert>	burst_size  = (burst_size &gt; p-&gt;fill_quanta) ?
</Insert>
<Copy StartSeek="3372" EndSeek="4066"/>
</Delta>
<Delta Version="205" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:46:12000">
<Copy StartSeek="0" EndSeek="3372"/>
<Insert>		burst_size : p-&gt;fill_quanta;
</Insert>
<Copy StartSeek="3407" EndSeek="4070"/>
</Delta>
<Delta Version="206" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="11:46:19000">
<Copy StartSeek="0" EndSeek="3463"/>
<Copy StartSeek="3498" EndSeek="3658"/>
<Insert>	policer-&gt;is_active = 1;
</Insert>
<Copy StartSeek="3659" EndSeek="4081"/>
</Delta>
<Delta Version="207" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="13:24:48000">
<Copy StartSeek="0" EndSeek="2708"/>
<Insert>/* rate [kbit/s],
</Insert>
<Copy StartSeek="2748" EndSeek="4103"/>
</Delta>
<Delta Version="208" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="13:25:44000">
<Copy StartSeek="0" EndSeek="2708"/>
<Insert>/* rate [kbit/s]. 0 means no limiting ,
</Insert>
<Copy StartSeek="2747" EndSeek="4102"/>
</Delta>
<Delta Version="209" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="13:25:45000">
<Copy StartSeek="0" EndSeek="2708"/>
<Insert>/* rate [kbit/s]. 0 means no limiting,
   burst_size [kbit]. set to 0 to use minimal possible val,
   timer_res [1/sec] */
</Insert>
<Copy StartSeek="2708" EndSeek="3979"/>
</Delta>
<Delta Version="210" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="13:26:27000">
<Copy StartSeek="0" EndSeek="512"/>
<Copy StartSeek="546" EndSeek="4013"/>
</Delta>
<Delta Version="211" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="13:39:45000">
<Copy StartSeek="0" EndSeek="597"/>
<Copy StartSeek="631" EndSeek="4047"/>
</Delta>
<Delta Version="212" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="13:39:59000">
<Copy StartSeek="0" EndSeek="596"/>
<Insert>
/* HAIM FIXME : Not SMP safe ! */
</Insert>
<Copy StartSeek="596" EndSeek="4012"/>
</Delta>
<Delta Version="213" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="13:40:8000">
<Copy StartSeek="0" EndSeek="1258"/>
<Insert>	return flow_policers[port];
</Insert>
<Copy StartSeek="1287" EndSeek="1290"/>
<Insert>
</Insert>
<Copy StartSeek="1508" EndSeek="4229"/>
</Delta>
<Delta Version="214" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:24:16000">
<Copy StartSeek="0" EndSeek="1505"/>
<Insert>}

</Insert>
<Copy StartSeek="1554" EndSeek="4275"/>
</Delta>
<Delta Version="215" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:24:55000">
<Copy StartSeek="0" EndSeek="1335"/>
<Insert>}

</Insert>
<Copy StartSeek="1339" EndSeek="1377"/>
<Insert>	struct dpa_policer *p;
</Insert>
<Copy StartSeek="1402" EndSeek="4277"/>
</Delta>
<Delta Version="216" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:26:11000">
<Copy StartSeek="0" EndSeek="1377"/>
<Insert>	struct dpa_policer **p;
</Insert>
<Copy StartSeek="1402" EndSeek="4277"/>
</Delta>
<Delta Version="217" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:26:55000">
<Copy StartSeek="0" EndSeek="1402"/>
<Insert>	if (port &gt;= DPA_PORT_POLICERS || port &lt; 0) {
</Insert>
<Copy StartSeek="1446" EndSeek="1456"/>
<Insert>	}

</Insert>
<Copy StartSeek="1457" EndSeek="4272"/>
</Delta>
<Delta Version="218" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:27:1000">
<Copy StartSeek="0" EndSeek="1335"/>
<Insert>
}

</Insert>
<Copy StartSeek="1545" EndSeek="4478"/>
</Delta>
<Delta Version="219" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:28:44000">
<Copy StartSeek="0" EndSeek="1541"/>
<Insert>
}

</Insert>
<Copy StartSeek="1544" EndSeek="4477"/>
</Delta>
<Delta Version="220" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:28:46000">
<Copy StartSeek="0" EndSeek="2128"/>
<Copy StartSeek="2129" EndSeek="4478"/>
</Delta>
<Delta Version="221" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:55:4000">
<Copy StartSeek="0" EndSeek="2128"/>
<Insert>
</Insert>
<Copy StartSeek="2182" EndSeek="4531"/>
</Delta>
<Delta Version="222" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:56:11000">
<Copy StartSeek="0" EndSeek="2128"/>
<Insert>	DPA_POLICE_DBG("policer %p port %lu", policer, port)
</Insert>
<Copy StartSeek="2183" EndSeek="4532"/>
</Delta>
<Delta Version="223" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:56:13000">
<Copy StartSeek="0" EndSeek="2128"/>
<Insert>	DPA_POLICE_DBG("policer %p port %lu", policer, port);
</Insert>
<Copy StartSeek="2178" EndSeek="4527"/>
</Delta>
<Delta Version="224" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:56:28000">
<Copy StartSeek="0" EndSeek="2129"/>
<Insert>	DPA_POLICE_DBG("policer %p port %lu", p, port);
</Insert>
<Copy StartSeek="2188" EndSeek="4537"/>
</Delta>
<Delta Version="225" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:56:54000">
<Copy StartSeek="0" EndSeek="1194"/>
<Copy StartSeek="1239" EndSeek="1285"/>
<Copy StartSeek="1288" EndSeek="4585"/>
</Delta>
<Delta Version="226" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:57:54000">
<Copy StartSeek="0" EndSeek="1285"/>
<Insert>		
</Insert>
<Copy StartSeek="1285" EndSeek="4582"/>
</Delta>
<Delta Version="227" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:57:58000">
<Copy StartSeek="0" EndSeek="1303"/>
<Copy StartSeek="1381" EndSeek="4660"/>
</Delta>
<Delta Version="228" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:58:17000">
<Copy StartSeek="0" EndSeek="4042"/>
<Insert>	policer-&gt;is_active = (rate != 0);
</Insert>
<Copy StartSeek="4071" EndSeek="4654"/>
</Delta>
<Delta Version="229" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="14:58:58000">
<Copy StartSeek="0" EndSeek="50"/>
<Insert>#define __DPA_DEBUG__
</Insert>
<Copy StartSeek="75" EndSeek="4657"/>
</Delta>
<Delta Version="230" Comment="" NL="\10" Encoding="text" Date="2013/06/26" Time="15:09:47000">
<Copy StartSeek="0" EndSeek="1485"/>
<Copy StartSeek="1486" EndSeek="4658"/>
</Delta>
</DeltaFile>
