[cpp]
idchars=a-zA-Z_$ 0-9
case-sensitive=y
styles=xhex dqbackslash dqbackslashml sqbackslash idparenfunction
keywords= "interface class" "interface struct" "ref class" "ref struct"
keywords= "value class" "value struct" @class @defs @encode @end @implementation
keywords= @interface @private @protected @protocol @public @selector abstract
keywords= and and_eq asm auto bitand bitor bool break bycopy byref case
keywords= catch char class Class compl const const_cast continue default
keywords= defined delegate delete do double dynamic_cast else enum event
keywords= EXEC explicit export extern false float for friend gcnew goto
keywords= id if in inline inout int long mutable namespace new not not_eq
keywords= oneway operator or or_eq out overload override private property
keywords= protected public register reinterpret_cast restrict return sealed
keywords= self short signed sizeof static static_cast struct super switch
keywords= template this throw true try typedef typeid typename union unsigned
keywords= using virtual void volatile wchar_t while xor xor_eq _asm _Bool
keywords= _Complex _Imaginary __asm __asm__
ppkeywords= #define #undef #elif #else #endif #if #ifdef #ifndef #include
ppkeywords= #pragma #error #import #using #line #warning #region #endregion
punctuation= { } [ ]
libkeywords= accumulate adjacent_difference adjacent_find advance allocator
libkeywords= array assert back_inserter back_insert_iterator bidirectional_iterator
libkeywords= binary_search bind1st bind2nd calloc cerr cin clearerr close
libkeywords= compose1 compose2 const_iterator const_pointer const_reference
libkeywords= copy copy_backward count_if cout creat deallocator deque difference_type
libkeywords= distance distance_type divides endl equal equal_range exception
libkeywords= exit fclose feof ferror fflush fgetc fgetpos FILE filebuf fill
libkeywords= fill_n find find_if flush fopen fork forward_iterator for_each
libkeywords= fprintf fputc fputs fread fread free freopen front_inserter
libkeywords= front_insert_iterator fscanf fseek fsetpos fstream ftell fwrite
libkeywords= generate generate_n get getc getchar getenv getopt gets greater
libkeywords= greater_equal ifstream ifstream includes inner_product inplace_merge
libkeywords= input_iterator inserter insert_iterator interior_ptr ios iostream
libkeywords= iostream_with_assign IotaGen is isalnum isalpha isdigit isgraph
libkeywords= islower ispunct isspace istream istream_iterator istream_with_assign
libkeywords= istrstream isupper isxdigit iterator iterator_catagory iterator_tag
libkeywords= iter_swap key_compare key_type less less_equal lexicographical_compare
libkeywords= list logical_and logical_not logical_or longjmp lower_bound
libkeywords= lseek make_heap make_pair malloc map max max_element memchr
libkeywords= memcmp memcpy memmove memset merge min minus min_element mismatch
libkeywords= modulus multimap multiset negate next_permutation not1 not2
libkeywords= not_equal_to nth_element NULL nullptr ofstream open ostream
libkeywords= ostream_with_assign ostrstream output_iterator pair partial_sort
libkeywords= partial_sort_copy partial_sum partition pin_ptr plus pointer
libkeywords= pop_heap prev_permutation print printf priority_queue ptr_fun
libkeywords= push_heap putc putchar puts queue raise random_access_iterator
libkeywords= random_shuffle raw_storage_iterator read realloc reference
libkeywords= remove remove remove_copy remove_copy_if remove_if rename replace
libkeywords= replace_copy replace_copy_if replace_if reverse reverse_copy
libkeywords= reverse_iterator rewind rotate rotate_copy safe_cast scanf
libkeywords= search set set setbuf setenv setjmp setvbuf set_difference
libkeywords= set_intersection set_symmetric_difference set_union signal
libkeywords= size_t size_type sort sort_heap sprintf sscanf stable_partition
libkeywords= stable_sort stack std strcat strchr strcmp strcpy strcspn streambuf
libkeywords= strerror stricmp string strlen strncmp strncpy strpbrk strrchr
libkeywords= strspn strstr strstream strstreambuf strtok swap swap_ranges
libkeywords= times tmpfile tmpnam tolower toupper transform ungetc unique
libkeywords= unique_copy upper_bound value_compare value_type vector vfprintf
libkeywords= vprintf vsprintf vsscanf write __clrcall __identifier __is_abstract
libkeywords= __is_ref_class __is_simple_value_class __is_value_class
operators= ! % & * - = + : ; < > ? / * | ^
mlcomment=/* */
linecomment=//
[ANSI C++]
idchars=a-zA-Z_$ 0-9
case-sensitive=y
styles=xhex dqbackslash dqbackslashml sqbackslash sqmultiline idparenfunction cpp
keywords= and and_eq auto bitand bitor bool break case catch char compl
keywords= const const_cast continue default do double dynamic_cast else
keywords= enum EXEC explicit export extern false float for friend goto if
keywords= inline int long mutable namespace not not_eq operator or or_eq
keywords= overload private protected public register reinterpret_cast restrict
keywords= return short signed sizeof static static_cast struct switch template
keywords= throw true try typedef typeid typename union unsigned using virtual
keywords= void volatile wchar_t while xor xor_eq _asm _Bool _Complex _Imaginary
ppkeywords= #define #elif #else #endif #endregion #error #if #ifdef #ifndef
ppkeywords= #import #include #line #pragma #region #undef #using #warning
punctuation= [ ] { }
libkeywords= NULL
operators= ! % & * * + - / : ; < = > ? ^ |
userkeywords= defined
mlcomment=/* */
linecomment=//
[ansic]
idchars=a-zA-Z_$ 0-9
case-sensitive=y
styles=xhex dqbackslash dqbackslashml sqbackslash idparenfunction
keywords= asm auto bool break case char const continue default defined do
keywords= double else enum EXEC extern false float for goto if inline int
keywords= long register restrict return short signed sizeof static struct
keywords= switch this throw true typedef union unsigned using void volatile
keywords= wchar_t while _asm _Bool _Complex _Imaginary __asm
ppkeywords= #define #elif #else #endif #error #if #ifdef #ifndef #import
ppkeywords= #include #line #pragma #undef #using #warning
punctuation= { }
libkeywords= and and_eq assert bitand bitor calloc clearerr close compl
libkeywords= creat exit fclose feof ferror fflush fgetc fgetpos FILE fopen
libkeywords= fork fprintf fputc fputs fread fread free freopen fscanf fseek
libkeywords= fsetpos ftell fwrite getc getchar getenv getopt gets is isalnum
libkeywords= isalpha isdigit isgraph islower ispunct isspace isupper isxdigit
libkeywords= longjmp lseek malloc memchr memcmp memcpy memmove memset not
libkeywords= not_eq NULL open or or_eq print printf putc putchar puts raise
libkeywords= read realloc remove rename rewind scanf setbuf setenv setjmp
libkeywords= setvbuf signal size_t sprintf sscanf strcat strchr strcmp strcpy
libkeywords= strcspn strerror stricmp strlen strncmp strncpy strpbrk strrchr
libkeywords= strspn strstr strtok tmpfile tmpnam tolower toupper ungetc
libkeywords= vfprintf vprintf vsprintf vsscanf wchar_t write xor xor_eq
operators= ! % & * * + - / : ; < = > ? ^ |
mlcomment=/* */
linecomment=//
[linux_patch]
idchars=a-zA-Z$ 0-9
case-sensitive=n
styles=
keywords= +++ ---
linecomment=+++
linecomment=---
[Makefile]
idchars=a-zA-Z 0-9_
case-sensitive=y
styles=bquote nonumbers dqbackslashml sqbackslash sqbackslashml
keywords= addprefix addsuffix basename define dir else enddef endif export
keywords= filter filter-out findstring firstword foreach if ifdef ifeq ifndef
keywords= ifneq include join notdir origin override patsubst shell sort
keywords= strip subst suffix unexport vpath wildcard word words
punctuation= - ! # $ % & ( ) * , . / : ; ? @ [ ] ^ ` { | } ~ + < = >
libkeywords= echo exec
operators= $ := ?= +=
linecomment=#
